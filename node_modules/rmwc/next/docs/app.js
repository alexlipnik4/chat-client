var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
import React, { useEffect, useState } from 'react';
import { Route, Link, Switch as RouterSwitch } from 'react-router-dom';
import { menuContent } from './menu-content';
// @ts-ignore
import { version } from 'rmwc/rmwc';
import { TopAppBar, TopAppBarRow, TopAppBarSection, TopAppBarTitle, TopAppBarNavigationIcon, TopAppBarActionItem, TopAppBarFixedAdjust } from '@rmwc/top-app-bar';
import { Icon } from '@rmwc/icon';
import { ThemeProvider } from '@rmwc/theme';
import { Typography } from '@rmwc/typography';
import { Ripple } from '@rmwc/ripple';
import { getAutoColorsForTheme } from '@rmwc/theme/utils';
import { TabBar, Tab } from '@rmwc/tabs';
import { Drawer, DrawerContent, DrawerAppContent } from '@rmwc/drawer';
import { ListItem, ListGroupSubheader, ListItemGraphic, ListItemMeta, CollapsibleList, SimpleListItem, List } from '@rmwc/list';
import { MenuSurface, MenuSurfaceAnchor, SimpleMenu, MenuItem } from '@rmwc/menu';
import { Button } from '@rmwc/button';
import { toCamel, toDashCase } from '@rmwc/base';
import Home from './home';
import { SiteSearch } from './site-search';
import { history } from './history';
var OLDER_VERSIONS = ['4.0.6', '3.0.11', '2.2.3', '1.9.4'];
var DEFAULT_THEME = {
    '--mdc-theme-primary': '#6200ee',
    '--mdc-theme-secondary': '#03dac4',
    '--mdc-theme-background': '#fff',
    '--mdc-theme-surface': '#fff',
    '--mdc-theme-error': '#b00020'
};
var TEXT_DEFAULTS = {
    '--mdc-theme-on-primary': '#fff',
    '--mdc-theme-on-secondary': '#fff',
    '--mdc-theme-on-surface': '#000',
    '--mdc-theme-on-error': '#fff',
    '--mdc-theme-text-primary-on-background': 'rgba(0, 0, 0, 0.87)',
    '--mdc-theme-text-secondary-on-background': 'rgba(0, 0, 0, 0.54)',
    '--mdc-theme-text-hint-on-background': 'rgba(0, 0, 0, 0.38)',
    '--mdc-theme-text-disabled-on-background': 'rgba(0, 0, 0, 0.38)',
    '--mdc-theme-text-icon-on-background': 'rgba(0, 0, 0, 0.38)',
    '--mdc-theme-text-primary-on-light': 'rgba(0, 0, 0, 0.87)',
    '--mdc-theme-text-secondary-on-light': 'rgba(0, 0, 0, 0.54)',
    '--mdc-theme-text-hint-on-light': 'rgba(0, 0, 0, 0.38)',
    '--mdc-theme-text-disabled-on-light': 'rgba(0, 0, 0, 0.38)',
    '--mdc-theme-text-icon-on-light': 'rgba(0, 0, 0, 0.38)',
    '--mdc-theme-text-primary-on-dark': 'white',
    '--mdc-theme-text-secondary-on-dark': 'rgba(255, 255, 255, 0.7)',
    '--mdc-theme-text-hint-on-dark': 'rgba(255, 255, 255, 0.5)',
    '--mdc-theme-text-disabled-on-dark': 'rgba(255, 255, 255, 0.5)',
    '--mdc-theme-text-icon-on-dark': 'rgba(255, 255, 255, 0.5)'
};
var THEMES = {
    Baseline: {
        '--mdc-theme-primary': '#6200ee',
        '--mdc-theme-secondary': '#03dac4' /** Any theme option pointing to a valid CSS value. */
    },
    Crane: {
        '--mdc-theme-primary': '#5d1049',
        '--mdc-theme-secondary': '#fa3336'
    },
    Fortnightly: {
        '--mdc-theme-primary': '#303030',
        '--mdc-theme-secondary': '#661fff'
    },
    Shrine: {
        '--mdc-theme-primary': '#ffdbcf',
        '--mdc-theme-secondary': '#feeae6'
    },
    Dark: {
        '--mdc-theme-background': '#212121',
        '--mdc-theme-surface': '#37474F',
        '--mdc-theme-on-surface': 'rgba(255,255,255,.87)',
        '--mdc-theme-primary': '#24aee9',
        '--mdc-theme-on-primary': 'rgba(255,255,255,.87)',
        '--mdc-theme-secondary': '#e539ff',
        '--mdc-theme-on-secondary': 'rgba(0,0,0,0.87)'
    }
};
var getTheme = function (themeName) {
    var theme = __assign({}, DEFAULT_THEME, (THEMES[themeName] || {}));
    var colors = getAutoColorsForTheme(theme);
    var merged = __assign({}, TEXT_DEFAULTS, colors);
    var order = [
        'primary',
        'secondary',
        'error',
        'background',
        'surface',
        'onPrimary',
        'onSecondary',
        'onSurface',
        'onError',
        'textPrimaryOnBackground',
        'textSecondaryOnBackground',
        'textHintOnBackground',
        'textDisabledOnBackground',
        'textIconOnBackground',
        'textPrimaryOnLight',
        'textSecondaryOnLight',
        'textHintOnLight',
        'textDisabledOnLight',
        'textIconOnLight',
        'textPrimaryOnDark',
        'textSecondaryOnDark',
        'textHintOnDark',
        'textDisabledOnDark',
        'textIconOnDark'
    ];
    return order.reduce(function (acc, key) {
        var newKey = "--mdc-theme-" + toDashCase(key);
        // @ts-ignore
        acc[newKey] = merged[newKey];
        return acc;
    }, {});
};
var MainMenuItem = function (_a) {
    var url = _a.url, label = _a.label;
    return (React.createElement(ListItem, __assign({ tag: Link }, { to: url }, { onClick: function () { return window.scrollTo(0, 0); }, activated: window.location.pathname.split('/').pop() === url.split('/').pop() }),
        React.createElement("span", null, label)));
};
var GithubIcon = function () { return (React.createElement("svg", { viewBox: "0 0 24 24", width: "24", height: "24" },
    React.createElement("path", { fill: "currentColor", d: "M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z" }))); };
function AppBar(_a) {
    var onNavClick = _a.onNavClick, children = _a.children;
    return (React.createElement(React.Fragment, null,
        React.createElement(TopAppBar, { fixed: true, className: "app__top-app-bar" },
            React.createElement(TopAppBarRow, null,
                React.createElement(TopAppBarSection, { alignStart: true },
                    React.createElement(TopAppBarNavigationIcon, { onClick: onNavClick, icon: "menu" }),
                    React.createElement(TopAppBarTitle, __assign({ tag: Link }, { to: '/' }), "RMWC"),
                    React.createElement(SimpleMenu, { handle: React.createElement("span", { className: "app__version" },
                            React.createElement("span", null, version),
                            " ",
                            React.createElement(Icon, { icon: "arrow_drop_down" })) },
                        React.createElement(MenuItem, null, version),
                        OLDER_VERSIONS.map(function (v) { return (React.createElement(MenuItem, { key: v, tag: "a", href: "/version/" + v }, v)); })),
                    React.createElement(SiteSearch, null)),
                React.createElement(TopAppBarSection, { alignEnd: true },
                    children,
                    React.createElement(TopAppBarActionItem, { tag: "a", href: "https://github.com/jamesmfriedman/rmwc", icon: React.createElement(GithubIcon, null) })))),
        React.createElement(TopAppBarFixedAdjust, null)));
}
var ColorBlock = function (_a) {
    var color = _a.color, _b = _a.size, size = _b === void 0 ? 1.5 : _b;
    return (React.createElement("div", { style: {
            display: 'inline-block',
            backgroundColor: color,
            border: '1px solid rgba(0,0,0,.25)',
            verticalAlign: 'middle',
            marginLeft: '0.5rem',
            height: size + "rem",
            width: size + "rem",
            borderRadius: '3px',
            boxSizing: 'border-box'
        } }));
};
var ThemePicker = /** @class */ (function (_super) {
    __extends(ThemePicker, _super);
    function ThemePicker() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            open: false,
            activeTabIndex: 0
        };
        return _this;
    }
    ThemePicker.prototype.componentDidUpdate = function () {
        window.requestAnimationFrame(function () {
            return window.dispatchEvent(new Event('resize'));
        });
    };
    ThemePicker.prototype.render = function () {
        var _this = this;
        var _a = this.props, selectedThemeName = _a.selectedThemeName, onThemeClick = _a.onThemeClick;
        var selectedTheme = getTheme(selectedThemeName);
        return (React.createElement(MenuSurfaceAnchor, null,
            React.createElement(MenuSurface, { style: { maxWidth: '100vw', width: '520px' }, open: this.state.open, onClose: function () {
                    _this.setState({ open: false });
                } },
                React.createElement(ListGroupSubheader, null, "Themes"),
                Object.keys(THEMES).map(function (themeName) {
                    var theme = getTheme(themeName);
                    return (React.createElement(ListItem, { style: { cursor: 'pointer' }, key: themeName, role: "menuitem", tabIndex: 0, onClick: function (evt) {
                            evt.stopPropagation();
                            onThemeClick(themeName);
                        } },
                        React.createElement("div", { style: {
                                width: '100%',
                                height: '100%',
                                position: 'absolute',
                                top: '0',
                                left: '0'
                            } }),
                        React.createElement(ListItemGraphic, { icon: themeName === selectedThemeName ? 'check' : '' }),
                        themeName,
                        React.createElement(ListItemMeta, null,
                            React.createElement(ColorBlock, { color: theme['--mdc-theme-primary'] }),
                            React.createElement(ColorBlock, { color: theme['--mdc-theme-secondary'] }),
                            React.createElement(ColorBlock, { color: theme['--mdc-theme-background'] }),
                            React.createElement(ColorBlock, { color: theme['--mdc-theme-surface'] }))));
                }),
                React.createElement(TabBar, { onClick: function (evt) { return _this.setState({ open: true }); }, style: { margin: '1rem auto -1rem auto' }, activeTabIndex: this.state.activeTabIndex, onActivate: function (evt) {
                        return _this.setState({ activeTabIndex: evt.detail.index });
                    } },
                    React.createElement(Tab, null, "ThemeProvider"),
                    React.createElement(Tab, null, "CSS")),
                React.createElement(ListItem, { onClick: function () { return _this.setState({ open: true }); }, ripple: false, style: {
                        backgroundColor: 'rgba(0,0,0,.05)',
                        padding: '1rem',
                        marginTop: '1rem',
                        display: 'block',
                        height: 'auto',
                        userSelect: 'initial',
                        cursor: 'text'
                    } }, this.state.activeTabIndex === 0 ? (React.createElement("div", null,
                    React.createElement("div", { style: { whiteSpace: 'normal' } },
                        React.createElement("b", null, "Theme your App!"),
                        React.createElement("br", null),
                        "Place this tag around the root of your App, or anywhere you want to apply a custom theme.",
                        React.createElement("br", null),
                        React.createElement("br", null)),
                    React.createElement("span", { className: "token keyword" }, "import"),
                    " ",
                    '{',
                    ' ',
                    "ThemeProvider ",
                    '}',
                    " ",
                    React.createElement("span", { className: "token keyword" }, "from"),
                    ' ',
                    React.createElement("span", { className: "token string" }, "'rmwc/Theme';"),
                    React.createElement("br", null),
                    React.createElement("br", null),
                    React.createElement("span", { className: "token punctuation" }, "<"),
                    React.createElement("span", { className: "token tag" }, "ThemeProvider "),
                    React.createElement("span", { className: "token attr-name" }, "options"),
                    "=",
                    '{{',
                    Object.entries(selectedTheme).map(function (_a, index, arr) {
                        var _b = __read(_a, 2), t = _b[0], val = _b[1];
                        return (React.createElement("div", { key: t, style: {
                                display: 'flex',
                                justifyContent: 'space-between',
                                alignItems: 'center'
                            } },
                            React.createElement("span", null,
                                React.createElement("span", { style: { color: '#07a' } },
                                    "\u00A0\u00A0",
                                    toCamel(t.split('--mdc-theme-')[1]),
                                    ":"),
                                ' ',
                                "'",
                                val,
                                "'",
                                index < arr.length - 1 ? ',' : ''),
                            React.createElement(ColorBlock, { color: val, size: 1 })));
                    }),
                    '}}',
                    React.createElement("span", { className: "token punctuation" }, ">"),
                    React.createElement("br", null),
                    "\u00A0\u00A0",
                    React.createElement("span", { className: "token punctuation" }, "<"),
                    React.createElement("span", { className: "token tag" }, "App "),
                    React.createElement("span", { className: "token punctuation" }, "/>"),
                    React.createElement("br", null),
                    React.createElement("span", { className: "token punctuation" }, "</"),
                    React.createElement("span", { className: "token tag" }, "ThemeProvider "),
                    React.createElement("span", { className: "token punctuation" }, ">"))) : (React.createElement("div", null,
                    React.createElement("div", { style: { whiteSpace: 'normal' } },
                        React.createElement("b", null, "Theme your App!"),
                        React.createElement("br", null),
                        "Copy and paste these rules into your main css file, or a style tag in your app and customize to your liking.",
                        React.createElement("br", null),
                        React.createElement("br", null)),
                    React.createElement("span", { style: { color: '#690' } }, ":root"),
                    " ",
                    '{',
                    Object.entries(selectedTheme).map(function (_a) {
                        var _b = __read(_a, 2), t = _b[0], val = _b[1];
                        return (React.createElement("div", { key: t, style: {
                                display: 'flex',
                                justifyContent: 'space-between',
                                alignItems: 'center'
                            } },
                            React.createElement("span", null,
                                React.createElement("span", { style: { color: '#07a' } },
                                    "\u00A0\u00A0",
                                    t,
                                    ":"),
                                ' ',
                                val,
                                ";"),
                            React.createElement(ColorBlock, { color: val, size: 1 })));
                    }),
                    '}'))),
                React.createElement("div", { style: { padding: '1rem' } },
                    React.createElement(Button, null, "Done"))),
            React.createElement(TopAppBarActionItem, { onClick: function () { return _this.setState({ open: !_this.state.open }); }, theme: "onPrimary", icon: "color_lens" })));
    };
    return ThemePicker;
}(React.Component));
function Nav(props) {
    return (React.createElement(React.Fragment, null,
        React.createElement(Drawer, __assign({ id: "main-nav" }, props),
            React.createElement(DrawerContent, null,
                React.createElement(List, null, menuContent.map(function (m) {
                    if ('options' in m) {
                        return (React.createElement(CollapsibleList, { key: m.label, startOpen: m.options.some(function (o) {
                                return window.location.pathname.split('/').pop() ===
                                    o.url.split('/').pop();
                            }), handle: React.createElement(SimpleListItem, { text: m.label, metaIcon: "chevron_right" }) }, m.options.map(function (v) { return (React.createElement(MainMenuItem, { key: v.label, label: v.label, url: v.url })); })));
                    }
                    return React.createElement(MainMenuItem, { label: m.label, url: m.url, key: m.label });
                }))),
            React.createElement(Ripple, { tag: "a", href: "https://opencollective.com/rmwc", className: "made-by" },
                React.createElement(Typography, { use: "caption" },
                    React.createElement(Icon, { icon: "https://s.gravatar.com/avatar/0b38f1a5ae97a182822f4bca53a2368f?s=80" }),
                    React.createElement("div", null,
                        React.createElement("div", null,
                            "Made with",
                            ' ',
                            React.createElement("span", { role: "img", "aria-label": "heart" }, "\u2764\uFE0F"),
                            ' ',
                            "in Sunny FL."),
                        React.createElement("div", { className: "made-by__link" }, "Donate on Open Collective")))))));
}
export function App() {
    var _a = __read(useState(false), 2), menuIsOpen = _a[0], setMenuIsOpen = _a[1];
    var _b = __read(useState(true), 2), isMobile = _b[0], setIsMobile = _b[1];
    var _c = __read(useState(window.localStorage.getItem('rmwcTheme') || 'Baseline'), 2), theme = _c[0], setTheme = _c[1];
    var _d = __read(useState(Math.random()), 2), forceUpdate = _d[1];
    var doSizeCheck = function (initial) {
        var _isMobile = window.innerWidth < 640;
        var _menuIsOpen = initial && window.innerWidth > 640 ? true : menuIsOpen;
        if (isMobile !== _isMobile || menuIsOpen !== _menuIsOpen) {
            setIsMobile(_isMobile);
            setMenuIsOpen(_menuIsOpen);
            setTimeout(function () {
                window.dispatchEvent(new Event('resize'));
            }, 300);
        }
    };
    useEffect(function () {
        doSizeCheck(true);
        history.listen(function () { return forceUpdate(Math.random()); });
    }, []);
    useEffect(function () {
        var listener = function () { return doSizeCheck(); };
        window.addEventListener('resize', listener);
        return function () { return window.removeEventListener('resize', listener); };
    });
    var pageId = "page-" + (window.location.pathname.split('/').pop() || 'home');
    return (React.createElement(ThemeProvider, { options: getTheme(theme), className: "app__root", tag: "div", id: pageId },
        React.createElement(AppBar, { onNavClick: function (evt) { return setMenuIsOpen(!menuIsOpen); } }, !isMobile && (React.createElement(ThemePicker, { selectedThemeName: theme, onThemeClick: function (themeName) {
                window.localStorage.setItem('rmwcTheme', themeName);
                setTheme(themeName);
            } }))),
        React.createElement("div", { className: "demo-content" },
            React.createElement(Nav, { open: menuIsOpen, dismissible: !isMobile, modal: isMobile, onClose: function () { return setMenuIsOpen(false); } }),
            React.createElement(DrawerAppContent, { tag: "main", className: "app__content" },
                React.createElement(RouterSwitch, null,
                    menuContent.map(function (m) {
                        if ('options' in m) {
                            return m.options.map(function (v) { return (React.createElement(Route, { path: v.url, exact: true, render: function () {
                                    document.title = "RMWC | React Material Web Components | " + v.label;
                                    return React.createElement(v.component, null);
                                }, key: v.label + 'sub' })); });
                        }
                        return (React.createElement(Route, { path: m.url, exact: true, key: m.label, render: function () {
                                document.title = "RMWC | React Material Web Components | " + m.label;
                                return React.createElement(m.component, null);
                            } }));
                    }),
                    React.createElement(Route, { path: "/", exact: true, component: Home }))))));
}
export default App;
