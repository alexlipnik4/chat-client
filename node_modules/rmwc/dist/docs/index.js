"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var ReactDOM = __importStar(require("react-dom"));
var react_router_dom_1 = require("react-router-dom");
var history_1 = require("./history");
var react_ga_1 = __importDefault(require("react-ga"));
require("../styles");
require("prismjs/themes/prism.css");
require("./docs.css");
var react_hot_loader_1 = require("react-hot-loader");
var app_1 = __importDefault(require("./app"));
// @ts-ignore
var register_service_worker_1 = require("./register-service-worker");
var provider_1 = require("@rmwc/provider");
var renderApp = function (Component) {
    ReactDOM.render(React.createElement(provider_1.RMWCProvider, null,
        React.createElement(react_hot_loader_1.AppContainer, null,
            React.createElement(react_router_dom_1.Router, { history: history_1.history },
                React.createElement(Component, { location: window.location.href })))), document.getElementById('root'));
};
// @ts-ignore
if (module.hot) {
    // @ts-ignore
    module.hot.accept(['./app'], function () { return renderApp(app_1.default); });
}
var initAnalytics = function () {
    react_ga_1.default.initialize(process.env.REACT_APP_GOOGLE_ANALYTICS_ID);
    var doPageView = function () {
        return react_ga_1.default.pageview(window.location.pathname + window.location.search);
    };
    history_1.history.listen(function () { return doPageView(); });
    doPageView();
};
var init = function () {
    renderApp(app_1.default);
    initAnalytics();
    register_service_worker_1.unregister();
};
exports.default = init;
