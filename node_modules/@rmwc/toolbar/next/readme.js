import React from 'react';
import { Docs, DocsExample, DocProps, DocsP, DocsSubtitle } from '@doc-utils';
import propsSrc from './generated-props.json';
import examples from './generated-examples.json';
import { Toolbar, ToolbarRow, ToolbarSection, ToolbarTitle, ToolbarMenuIcon, ToolbarIcon, ToolbarFixedAdjust } from '.';
export default function () {
    return (React.createElement(Docs, { title: "Toolbars", lead: "Toolbar actions appear above the view affected by their actions.", module: "@rmwc/toolbar", styles: ['@material/toolbar/dist/mdc.toolbar.css'], docsLink: "https://material.io/develop/web/components/toolbar/", examples: examples },
        React.createElement(DocsP, null, "**Attention** Toolbars are technically deprecated by `material-components-web` (although they continue to get updates?) but they remain useful until TopAppBar can catch up and contain all of the same behaviors."),
        React.createElement(DocsExample, { label: "Basic Usage" },
            React.createElement(Toolbar, null,
                React.createElement(ToolbarRow, null,
                    React.createElement(ToolbarTitle, null, "Toolbar")))),
        React.createElement(DocsExample, { label: "Multiple Sections" },
            React.createElement(Toolbar, null,
                React.createElement(ToolbarRow, null,
                    React.createElement(ToolbarSection, { alignStart: true },
                        React.createElement(ToolbarMenuIcon, { icon: "menu" }),
                        React.createElement(ToolbarTitle, null, "Toolbar")),
                    React.createElement(ToolbarSection, { alignEnd: true },
                        React.createElement(ToolbarIcon, { icon: "save" }),
                        React.createElement(ToolbarIcon, { icon: "print" }))))),
        React.createElement(DocsExample, { label: "Multiple Rows" },
            React.createElement(Toolbar, null,
                React.createElement(ToolbarRow, null,
                    React.createElement(ToolbarTitle, null, "Toolbar")),
                React.createElement(ToolbarRow, null,
                    React.createElement(ToolbarTitle, null, "Second Row")))),
        React.createElement(DocsSubtitle, null, "Fixed"),
        React.createElement(DocsP, null, "When using the `fixed` prop, you can optionally add the `ToolbarFixedAdjust` component to fill in the appropriate space."),
        React.createElement(DocsExample, { label: "Fixed", iframe: true },
            React.createElement(React.Fragment, null,
                React.createElement(Toolbar, { fixed: true },
                    React.createElement(ToolbarRow, null,
                        React.createElement(ToolbarTitle, null, "Toolbar"))),
                React.createElement(ToolbarFixedAdjust, null),
                React.createElement("div", { style: { height: '100rem', padding: '1rem' } }, "Scroll Me"))),
        React.createElement(DocsExample, { label: "Last Row", iframe: true },
            React.createElement(React.Fragment, null,
                React.createElement(Toolbar, { fixed: true, fixedLastrowOnly: true },
                    React.createElement(ToolbarRow, null,
                        React.createElement(ToolbarTitle, null, "Toolbar")),
                    React.createElement(ToolbarRow, null,
                        React.createElement(ToolbarTitle, null, "Another Row"))),
                React.createElement(ToolbarFixedAdjust, null),
                React.createElement("div", { style: { height: '100rem', padding: '1rem' } }, "Scroll Me"))),
        React.createElement(DocsSubtitle, null, "Flexible"),
        React.createElement(DocsExample, { iframe: true },
            React.createElement(React.Fragment, null,
                React.createElement(Toolbar, { fixed: true, flexible: true },
                    React.createElement(ToolbarRow, null,
                        React.createElement(ToolbarTitle, null, "Toolbar"))),
                React.createElement(ToolbarFixedAdjust, null),
                React.createElement("div", { style: { height: '100rem', padding: '1rem' } }, "Scroll Me"))),
        React.createElement(DocProps, { src: propsSrc, components: [
                Toolbar,
                ToolbarRow,
                ToolbarSection,
                ToolbarTitle,
                ToolbarMenuIcon,
                ToolbarIcon,
                ToolbarFixedAdjust
            ] })));
}
