"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var _doc_utils_1 = require("@doc-utils");
var generated_props_json_1 = __importDefault(require("./generated-props.json"));
var generated_examples_json_1 = __importDefault(require("./generated-examples.json"));
var _1 = require(".");
function default_1() {
    return (react_1.default.createElement(_doc_utils_1.Docs, { title: "Toolbars", lead: "Toolbar actions appear above the view affected by their actions.", module: "@rmwc/toolbar", styles: ['@material/toolbar/dist/mdc.toolbar.css'], docsLink: "https://material.io/develop/web/components/toolbar/", examples: generated_examples_json_1.default },
        react_1.default.createElement(_doc_utils_1.DocsP, null, "**Attention** Toolbars are technically deprecated by `material-components-web` (although they continue to get updates?) but they remain useful until TopAppBar can catch up and contain all of the same behaviors."),
        react_1.default.createElement(_doc_utils_1.DocsExample, { label: "Basic Usage" },
            react_1.default.createElement(_1.Toolbar, null,
                react_1.default.createElement(_1.ToolbarRow, null,
                    react_1.default.createElement(_1.ToolbarTitle, null, "Toolbar")))),
        react_1.default.createElement(_doc_utils_1.DocsExample, { label: "Multiple Sections" },
            react_1.default.createElement(_1.Toolbar, null,
                react_1.default.createElement(_1.ToolbarRow, null,
                    react_1.default.createElement(_1.ToolbarSection, { alignStart: true },
                        react_1.default.createElement(_1.ToolbarMenuIcon, { icon: "menu" }),
                        react_1.default.createElement(_1.ToolbarTitle, null, "Toolbar")),
                    react_1.default.createElement(_1.ToolbarSection, { alignEnd: true },
                        react_1.default.createElement(_1.ToolbarIcon, { icon: "save" }),
                        react_1.default.createElement(_1.ToolbarIcon, { icon: "print" }))))),
        react_1.default.createElement(_doc_utils_1.DocsExample, { label: "Multiple Rows" },
            react_1.default.createElement(_1.Toolbar, null,
                react_1.default.createElement(_1.ToolbarRow, null,
                    react_1.default.createElement(_1.ToolbarTitle, null, "Toolbar")),
                react_1.default.createElement(_1.ToolbarRow, null,
                    react_1.default.createElement(_1.ToolbarTitle, null, "Second Row")))),
        react_1.default.createElement(_doc_utils_1.DocsSubtitle, null, "Fixed"),
        react_1.default.createElement(_doc_utils_1.DocsP, null, "When using the `fixed` prop, you can optionally add the `ToolbarFixedAdjust` component to fill in the appropriate space."),
        react_1.default.createElement(_doc_utils_1.DocsExample, { label: "Fixed", iframe: true },
            react_1.default.createElement(react_1.default.Fragment, null,
                react_1.default.createElement(_1.Toolbar, { fixed: true },
                    react_1.default.createElement(_1.ToolbarRow, null,
                        react_1.default.createElement(_1.ToolbarTitle, null, "Toolbar"))),
                react_1.default.createElement(_1.ToolbarFixedAdjust, null),
                react_1.default.createElement("div", { style: { height: '100rem', padding: '1rem' } }, "Scroll Me"))),
        react_1.default.createElement(_doc_utils_1.DocsExample, { label: "Last Row", iframe: true },
            react_1.default.createElement(react_1.default.Fragment, null,
                react_1.default.createElement(_1.Toolbar, { fixed: true, fixedLastrowOnly: true },
                    react_1.default.createElement(_1.ToolbarRow, null,
                        react_1.default.createElement(_1.ToolbarTitle, null, "Toolbar")),
                    react_1.default.createElement(_1.ToolbarRow, null,
                        react_1.default.createElement(_1.ToolbarTitle, null, "Another Row"))),
                react_1.default.createElement(_1.ToolbarFixedAdjust, null),
                react_1.default.createElement("div", { style: { height: '100rem', padding: '1rem' } }, "Scroll Me"))),
        react_1.default.createElement(_doc_utils_1.DocsSubtitle, null, "Flexible"),
        react_1.default.createElement(_doc_utils_1.DocsExample, { iframe: true },
            react_1.default.createElement(react_1.default.Fragment, null,
                react_1.default.createElement(_1.Toolbar, { fixed: true, flexible: true },
                    react_1.default.createElement(_1.ToolbarRow, null,
                        react_1.default.createElement(_1.ToolbarTitle, null, "Toolbar"))),
                react_1.default.createElement(_1.ToolbarFixedAdjust, null),
                react_1.default.createElement("div", { style: { height: '100rem', padding: '1rem' } }, "Scroll Me"))),
        react_1.default.createElement(_doc_utils_1.DocProps, { src: generated_props_json_1.default, components: [
                _1.Toolbar,
                _1.ToolbarRow,
                _1.ToolbarSection,
                _1.ToolbarTitle,
                _1.ToolbarMenuIcon,
                _1.ToolbarIcon,
                _1.ToolbarFixedAdjust
            ] })));
}
exports.default = default_1;
