import * as React from 'react';
import * as RMWC from '@rmwc/types';
/** An Avatar component for displaying users in a system. */
export interface AvatarProps {
    /** The url for the image. This gets passed to the Icon component. */
    src?: string;
    /** The size of the avatar */
    size?: RMWC.IconSizeT;
    /** The name of the user. This will get converted to initials and set the hover title. */
    name?: string;
    /** Make the avatar square. */
    square?: boolean;
    /** Make the avatar interactive. */
    interactive?: boolean;
    /** Contain the avatar image instead of covering. */
    contain?: boolean;
}
/** A container for groups of Avatars */
export interface AvatarGroupProps {
    /** Makes the list dense */
    dense?: boolean;
}
/** A container for groups of Avatars */
export declare const AvatarGroup: React.ComponentType<RMWC.MergeInterfacesT<AvatarGroupProps, RMWC.ComponentProps>>;
/** An Avatar component for displaying users in a system. */
export declare const Avatar: {
    ({ src, size, name, interactive, contain, ...rest }: RMWC.MergeInterfacesT<AvatarProps, RMWC.ComponentProps>): JSX.Element;
    displayName: string;
};
/** An Avatar count for displaying list overflow. */
export interface AvatarCountProps {
    /** The number of users. */
    value: number;
    /** Optionally renders a "+" to indicate overlow. */
    overflow?: boolean;
    /** The size of the avatar */
    size?: RMWC.IconSizeT;
    /** Make the avatar square. */
    square?: boolean;
    /** Make the avatar interactive. */
    interactive?: boolean;
}
/** An Avatar count for displaying list overflow. */
export declare const AvatarCount: {
    ({ value, overflow, size, interactive, ...rest }: RMWC.MergeInterfacesT<AvatarCountProps, RMWC.ComponentProps>): JSX.Element;
    displayName: string;
};
