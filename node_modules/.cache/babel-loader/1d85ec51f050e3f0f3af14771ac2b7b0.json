{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { closest, matches } from '@material/dom/ponyfill';\nimport { MDCRipple } from '@material/ripple/component';\nimport { MDCDialogFoundation } from './foundation';\nimport * as util from './util';\nvar strings = MDCDialogFoundation.strings;\n\nvar MDCDialog =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MDCDialog, _super);\n\n  function MDCDialog() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(MDCDialog.prototype, \"isOpen\", {\n    get: function () {\n      return this.foundation_.isOpen();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCDialog.prototype, \"escapeKeyAction\", {\n    get: function () {\n      return this.foundation_.getEscapeKeyAction();\n    },\n    set: function (action) {\n      this.foundation_.setEscapeKeyAction(action);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCDialog.prototype, \"scrimClickAction\", {\n    get: function () {\n      return this.foundation_.getScrimClickAction();\n    },\n    set: function (action) {\n      this.foundation_.setScrimClickAction(action);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCDialog.prototype, \"autoStackButtons\", {\n    get: function () {\n      return this.foundation_.getAutoStackButtons();\n    },\n    set: function (autoStack) {\n      this.foundation_.setAutoStackButtons(autoStack);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MDCDialog.attachTo = function (root) {\n    return new MDCDialog(root);\n  };\n\n  MDCDialog.prototype.initialize = function (focusTrapFactory) {\n    var e_1, _a;\n\n    var container = this.root_.querySelector(strings.CONTAINER_SELECTOR);\n\n    if (!container) {\n      throw new Error(\"Dialog component requires a \" + strings.CONTAINER_SELECTOR + \" container element\");\n    }\n\n    this.container_ = container;\n    this.content_ = this.root_.querySelector(strings.CONTENT_SELECTOR);\n    this.buttons_ = [].slice.call(this.root_.querySelectorAll(strings.BUTTON_SELECTOR));\n    this.defaultButton_ = this.root_.querySelector(\"[\" + strings.BUTTON_DEFAULT_ATTRIBUTE + \"]\");\n    this.focusTrapFactory_ = focusTrapFactory;\n    this.buttonRipples_ = [];\n\n    try {\n      for (var _b = tslib_1.__values(this.buttons_), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var buttonEl = _c.value;\n        this.buttonRipples_.push(new MDCRipple(buttonEl));\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  MDCDialog.prototype.initialSyncWithDOM = function () {\n    var _this = this;\n\n    this.focusTrap_ = util.createFocusTrapInstance(this.container_, this.focusTrapFactory_, this.getInitialFocusEl_() || undefined);\n    this.handleClick_ = this.foundation_.handleClick.bind(this.foundation_);\n    this.handleKeydown_ = this.foundation_.handleKeydown.bind(this.foundation_);\n    this.handleDocumentKeydown_ = this.foundation_.handleDocumentKeydown.bind(this.foundation_);\n    this.handleLayout_ = this.layout.bind(this);\n    var LAYOUT_EVENTS = ['resize', 'orientationchange'];\n\n    this.handleOpening_ = function () {\n      LAYOUT_EVENTS.forEach(function (evtType) {\n        return window.addEventListener(evtType, _this.handleLayout_);\n      });\n      document.addEventListener('keydown', _this.handleDocumentKeydown_);\n    };\n\n    this.handleClosing_ = function () {\n      LAYOUT_EVENTS.forEach(function (evtType) {\n        return window.removeEventListener(evtType, _this.handleLayout_);\n      });\n      document.removeEventListener('keydown', _this.handleDocumentKeydown_);\n    };\n\n    this.listen('click', this.handleClick_);\n    this.listen('keydown', this.handleKeydown_);\n    this.listen(strings.OPENING_EVENT, this.handleOpening_);\n    this.listen(strings.CLOSING_EVENT, this.handleClosing_);\n  };\n\n  MDCDialog.prototype.destroy = function () {\n    this.unlisten('click', this.handleClick_);\n    this.unlisten('keydown', this.handleKeydown_);\n    this.unlisten(strings.OPENING_EVENT, this.handleOpening_);\n    this.unlisten(strings.CLOSING_EVENT, this.handleClosing_);\n    this.handleClosing_();\n    this.buttonRipples_.forEach(function (ripple) {\n      return ripple.destroy();\n    });\n\n    _super.prototype.destroy.call(this);\n  };\n\n  MDCDialog.prototype.layout = function () {\n    this.foundation_.layout();\n  };\n\n  MDCDialog.prototype.open = function () {\n    this.foundation_.open();\n  };\n\n  MDCDialog.prototype.close = function (action) {\n    if (action === void 0) {\n      action = '';\n    }\n\n    this.foundation_.close(action);\n  };\n\n  MDCDialog.prototype.getDefaultFoundation = function () {\n    var _this = this; // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n\n\n    var adapter = {\n      addBodyClass: function (className) {\n        return document.body.classList.add(className);\n      },\n      addClass: function (className) {\n        return _this.root_.classList.add(className);\n      },\n      areButtonsStacked: function () {\n        return util.areTopsMisaligned(_this.buttons_);\n      },\n      clickDefaultButton: function () {\n        return _this.defaultButton_ && _this.defaultButton_.click();\n      },\n      eventTargetMatches: function (target, selector) {\n        return target ? matches(target, selector) : false;\n      },\n      getActionFromEvent: function (evt) {\n        if (!evt.target) {\n          return '';\n        }\n\n        var element = closest(evt.target, \"[\" + strings.ACTION_ATTRIBUTE + \"]\");\n        return element && element.getAttribute(strings.ACTION_ATTRIBUTE);\n      },\n      getInitialFocusEl: function () {\n        return _this.getInitialFocusEl_();\n      },\n      hasClass: function (className) {\n        return _this.root_.classList.contains(className);\n      },\n      isContentScrollable: function () {\n        return util.isScrollable(_this.content_);\n      },\n      notifyClosed: function (action) {\n        return _this.emit(strings.CLOSED_EVENT, action ? {\n          action: action\n        } : {});\n      },\n      notifyClosing: function (action) {\n        return _this.emit(strings.CLOSING_EVENT, action ? {\n          action: action\n        } : {});\n      },\n      notifyOpened: function () {\n        return _this.emit(strings.OPENED_EVENT, {});\n      },\n      notifyOpening: function () {\n        return _this.emit(strings.OPENING_EVENT, {});\n      },\n      releaseFocus: function () {\n        return _this.focusTrap_.deactivate();\n      },\n      removeBodyClass: function (className) {\n        return document.body.classList.remove(className);\n      },\n      removeClass: function (className) {\n        return _this.root_.classList.remove(className);\n      },\n      reverseButtons: function () {\n        _this.buttons_.reverse();\n\n        _this.buttons_.forEach(function (button) {\n          button.parentElement.appendChild(button);\n        });\n      },\n      trapFocus: function () {\n        return _this.focusTrap_.activate();\n      }\n    };\n    return new MDCDialogFoundation(adapter);\n  };\n\n  MDCDialog.prototype.getInitialFocusEl_ = function () {\n    return document.querySelector(\"[\" + strings.INITIAL_FOCUS_ATTRIBUTE + \"]\");\n  };\n\n  return MDCDialog;\n}(MDCComponent);\n\nexport { MDCDialog };","map":{"version":3,"sources":["component.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { closest, matches } from '@material/dom/ponyfill';\nimport { MDCRipple } from '@material/ripple/component';\nimport { MDCDialogFoundation } from './foundation';\nimport * as util from './util';\nvar strings = MDCDialogFoundation.strings;\nvar MDCDialog = /** @class */ (function (_super) {\n    tslib_1.__extends(MDCDialog, _super);\n    function MDCDialog() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MDCDialog.prototype, \"isOpen\", {\n        get: function () {\n            return this.foundation_.isOpen();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCDialog.prototype, \"escapeKeyAction\", {\n        get: function () {\n            return this.foundation_.getEscapeKeyAction();\n        },\n        set: function (action) {\n            this.foundation_.setEscapeKeyAction(action);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCDialog.prototype, \"scrimClickAction\", {\n        get: function () {\n            return this.foundation_.getScrimClickAction();\n        },\n        set: function (action) {\n            this.foundation_.setScrimClickAction(action);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCDialog.prototype, \"autoStackButtons\", {\n        get: function () {\n            return this.foundation_.getAutoStackButtons();\n        },\n        set: function (autoStack) {\n            this.foundation_.setAutoStackButtons(autoStack);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCDialog.attachTo = function (root) {\n        return new MDCDialog(root);\n    };\n    MDCDialog.prototype.initialize = function (focusTrapFactory) {\n        var e_1, _a;\n        var container = this.root_.querySelector(strings.CONTAINER_SELECTOR);\n        if (!container) {\n            throw new Error(\"Dialog component requires a \" + strings.CONTAINER_SELECTOR + \" container element\");\n        }\n        this.container_ = container;\n        this.content_ = this.root_.querySelector(strings.CONTENT_SELECTOR);\n        this.buttons_ = [].slice.call(this.root_.querySelectorAll(strings.BUTTON_SELECTOR));\n        this.defaultButton_ = this.root_.querySelector(\"[\" + strings.BUTTON_DEFAULT_ATTRIBUTE + \"]\");\n        this.focusTrapFactory_ = focusTrapFactory;\n        this.buttonRipples_ = [];\n        try {\n            for (var _b = tslib_1.__values(this.buttons_), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var buttonEl = _c.value;\n                this.buttonRipples_.push(new MDCRipple(buttonEl));\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    MDCDialog.prototype.initialSyncWithDOM = function () {\n        var _this = this;\n        this.focusTrap_ = util.createFocusTrapInstance(this.container_, this.focusTrapFactory_, this.getInitialFocusEl_() || undefined);\n        this.handleClick_ = this.foundation_.handleClick.bind(this.foundation_);\n        this.handleKeydown_ = this.foundation_.handleKeydown.bind(this.foundation_);\n        this.handleDocumentKeydown_ = this.foundation_.handleDocumentKeydown.bind(this.foundation_);\n        this.handleLayout_ = this.layout.bind(this);\n        var LAYOUT_EVENTS = ['resize', 'orientationchange'];\n        this.handleOpening_ = function () {\n            LAYOUT_EVENTS.forEach(function (evtType) { return window.addEventListener(evtType, _this.handleLayout_); });\n            document.addEventListener('keydown', _this.handleDocumentKeydown_);\n        };\n        this.handleClosing_ = function () {\n            LAYOUT_EVENTS.forEach(function (evtType) { return window.removeEventListener(evtType, _this.handleLayout_); });\n            document.removeEventListener('keydown', _this.handleDocumentKeydown_);\n        };\n        this.listen('click', this.handleClick_);\n        this.listen('keydown', this.handleKeydown_);\n        this.listen(strings.OPENING_EVENT, this.handleOpening_);\n        this.listen(strings.CLOSING_EVENT, this.handleClosing_);\n    };\n    MDCDialog.prototype.destroy = function () {\n        this.unlisten('click', this.handleClick_);\n        this.unlisten('keydown', this.handleKeydown_);\n        this.unlisten(strings.OPENING_EVENT, this.handleOpening_);\n        this.unlisten(strings.CLOSING_EVENT, this.handleClosing_);\n        this.handleClosing_();\n        this.buttonRipples_.forEach(function (ripple) { return ripple.destroy(); });\n        _super.prototype.destroy.call(this);\n    };\n    MDCDialog.prototype.layout = function () {\n        this.foundation_.layout();\n    };\n    MDCDialog.prototype.open = function () {\n        this.foundation_.open();\n    };\n    MDCDialog.prototype.close = function (action) {\n        if (action === void 0) { action = ''; }\n        this.foundation_.close(action);\n    };\n    MDCDialog.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            addBodyClass: function (className) { return document.body.classList.add(className); },\n            addClass: function (className) { return _this.root_.classList.add(className); },\n            areButtonsStacked: function () { return util.areTopsMisaligned(_this.buttons_); },\n            clickDefaultButton: function () { return _this.defaultButton_ && _this.defaultButton_.click(); },\n            eventTargetMatches: function (target, selector) { return target ? matches(target, selector) : false; },\n            getActionFromEvent: function (evt) {\n                if (!evt.target) {\n                    return '';\n                }\n                var element = closest(evt.target, \"[\" + strings.ACTION_ATTRIBUTE + \"]\");\n                return element && element.getAttribute(strings.ACTION_ATTRIBUTE);\n            },\n            getInitialFocusEl: function () { return _this.getInitialFocusEl_(); },\n            hasClass: function (className) { return _this.root_.classList.contains(className); },\n            isContentScrollable: function () { return util.isScrollable(_this.content_); },\n            notifyClosed: function (action) { return _this.emit(strings.CLOSED_EVENT, action ? { action: action } : {}); },\n            notifyClosing: function (action) { return _this.emit(strings.CLOSING_EVENT, action ? { action: action } : {}); },\n            notifyOpened: function () { return _this.emit(strings.OPENED_EVENT, {}); },\n            notifyOpening: function () { return _this.emit(strings.OPENING_EVENT, {}); },\n            releaseFocus: function () { return _this.focusTrap_.deactivate(); },\n            removeBodyClass: function (className) { return document.body.classList.remove(className); },\n            removeClass: function (className) { return _this.root_.classList.remove(className); },\n            reverseButtons: function () {\n                _this.buttons_.reverse();\n                _this.buttons_.forEach(function (button) {\n                    button.parentElement.appendChild(button);\n                });\n            },\n            trapFocus: function () { return _this.focusTrap_.activate(); },\n        };\n        return new MDCDialogFoundation(adapter);\n    };\n    MDCDialog.prototype.getInitialFocusEl_ = function () {\n        return document.querySelector(\"[\" + strings.INITIAL_FOCUS_ATTRIBUTE + \"]\");\n    };\n    return MDCDialog;\n}(MDCComponent));\nexport { MDCDialog };\n//# sourceMappingURL=component.js.map"]},"metadata":{},"sourceType":"module"}