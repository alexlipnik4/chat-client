{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCRipple } from '@material/ripple/component';\nimport { MDCToolbarFoundation } from './foundation';\nvar strings = MDCToolbarFoundation.strings;\n\nvar MDCToolbar =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MDCToolbar, _super);\n\n  function MDCToolbar() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MDCToolbar.attachTo = function (root) {\n    return new MDCToolbar(root);\n  };\n\n  MDCToolbar.prototype.initialize = function () {\n    var _this = this;\n\n    this.ripples_ = [];\n    this.fixedAdjustElement_ = null;\n    this.titleElement_ = this.root_.querySelector(strings.TITLE_SELECTOR);\n    var firstRowElement = this.root_.querySelector(strings.FIRST_ROW_SELECTOR);\n\n    if (!firstRowElement) {\n      throw new Error(\"MDCToolbar: Required sub-element '\" + strings.FIRST_ROW_SELECTOR + \"' is missing\");\n    }\n\n    this.firstRowElement_ = firstRowElement;\n    [].forEach.call(this.root_.querySelectorAll(strings.ICON_SELECTOR), function (icon) {\n      var ripple = MDCRipple.attachTo(icon);\n      ripple.unbounded = true;\n\n      _this.ripples_.push(ripple);\n    });\n  };\n\n  MDCToolbar.prototype.destroy = function () {\n    this.ripples_.forEach(function (ripple) {\n      ripple.destroy();\n    });\n\n    _super.prototype.destroy.call(this);\n  };\n\n  Object.defineProperty(MDCToolbar.prototype, \"fixedAdjustElement\", {\n    get: function () {\n      return this.fixedAdjustElement_;\n    },\n    set: function (element) {\n      this.fixedAdjustElement_ = element;\n      this.foundation_.updateAdjustElementStyles();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MDCToolbar.prototype.getDefaultFoundation = function () {\n    var _this = this; // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    var adapter = {\n      hasClass: function (className) {\n        return _this.root_.classList.contains(className);\n      },\n      addClass: function (className) {\n        return _this.root_.classList.add(className);\n      },\n      removeClass: function (className) {\n        return _this.root_.classList.remove(className);\n      },\n      registerScrollHandler: function (handler) {\n        return window.addEventListener('scroll', handler);\n      },\n      deregisterScrollHandler: function (handler) {\n        return window.removeEventListener('scroll', handler);\n      },\n      registerResizeHandler: function (handler) {\n        return window.addEventListener('resize', handler);\n      },\n      deregisterResizeHandler: function (handler) {\n        return window.removeEventListener('resize', handler);\n      },\n      getViewportWidth: function () {\n        return window.innerWidth;\n      },\n      getViewportScrollY: function () {\n        return window.pageYOffset;\n      },\n      getOffsetHeight: function () {\n        return _this.root_.offsetHeight;\n      },\n      getFirstRowElementOffsetHeight: function () {\n        return _this.firstRowElement_.offsetHeight;\n      },\n      notifyChange: function (evtData) {\n        return _this.emit(strings.CHANGE_EVENT, evtData);\n      },\n      setStyle: function (property, value) {\n        return _this.root_.style.setProperty(property, value);\n      },\n      setStyleForTitleElement: function (property, value) {\n        if (_this.titleElement_) {\n          _this.titleElement_.style.setProperty(property, value);\n        }\n      },\n      setStyleForFlexibleRowElement: function (property, value) {\n        return _this.firstRowElement_.style.setProperty(property, value);\n      },\n      setStyleForFixedAdjustElement: function (property, value) {\n        if (_this.fixedAdjustElement) {\n          _this.fixedAdjustElement.style.setProperty(property, value);\n        }\n      }\n    }; // tslint:enable:object-literal-sort-keys\n\n    return new MDCToolbarFoundation(adapter);\n  };\n\n  return MDCToolbar;\n}(MDCComponent);\n\nexport { MDCToolbar };","map":{"version":3,"sources":["component.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCRipple } from '@material/ripple/component';\nimport { MDCToolbarFoundation } from './foundation';\nvar strings = MDCToolbarFoundation.strings;\nvar MDCToolbar = /** @class */ (function (_super) {\n    tslib_1.__extends(MDCToolbar, _super);\n    function MDCToolbar() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCToolbar.attachTo = function (root) {\n        return new MDCToolbar(root);\n    };\n    MDCToolbar.prototype.initialize = function () {\n        var _this = this;\n        this.ripples_ = [];\n        this.fixedAdjustElement_ = null;\n        this.titleElement_ = this.root_.querySelector(strings.TITLE_SELECTOR);\n        var firstRowElement = this.root_.querySelector(strings.FIRST_ROW_SELECTOR);\n        if (!firstRowElement) {\n            throw new Error(\"MDCToolbar: Required sub-element '\" + strings.FIRST_ROW_SELECTOR + \"' is missing\");\n        }\n        this.firstRowElement_ = firstRowElement;\n        [].forEach.call(this.root_.querySelectorAll(strings.ICON_SELECTOR), function (icon) {\n            var ripple = MDCRipple.attachTo(icon);\n            ripple.unbounded = true;\n            _this.ripples_.push(ripple);\n        });\n    };\n    MDCToolbar.prototype.destroy = function () {\n        this.ripples_.forEach(function (ripple) {\n            ripple.destroy();\n        });\n        _super.prototype.destroy.call(this);\n    };\n    Object.defineProperty(MDCToolbar.prototype, \"fixedAdjustElement\", {\n        get: function () {\n            return this.fixedAdjustElement_;\n        },\n        set: function (element) {\n            this.fixedAdjustElement_ = element;\n            this.foundation_.updateAdjustElementStyles();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCToolbar.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        var adapter = {\n            hasClass: function (className) { return _this.root_.classList.contains(className); },\n            addClass: function (className) { return _this.root_.classList.add(className); },\n            removeClass: function (className) { return _this.root_.classList.remove(className); },\n            registerScrollHandler: function (handler) { return window.addEventListener('scroll', handler); },\n            deregisterScrollHandler: function (handler) { return window.removeEventListener('scroll', handler); },\n            registerResizeHandler: function (handler) { return window.addEventListener('resize', handler); },\n            deregisterResizeHandler: function (handler) { return window.removeEventListener('resize', handler); },\n            getViewportWidth: function () { return window.innerWidth; },\n            getViewportScrollY: function () { return window.pageYOffset; },\n            getOffsetHeight: function () { return _this.root_.offsetHeight; },\n            getFirstRowElementOffsetHeight: function () { return _this.firstRowElement_.offsetHeight; },\n            notifyChange: function (evtData) { return _this.emit(strings.CHANGE_EVENT, evtData); },\n            setStyle: function (property, value) { return _this.root_.style.setProperty(property, value); },\n            setStyleForTitleElement: function (property, value) {\n                if (_this.titleElement_) {\n                    _this.titleElement_.style.setProperty(property, value);\n                }\n            },\n            setStyleForFlexibleRowElement: function (property, value) { return _this.firstRowElement_.style.setProperty(property, value); },\n            setStyleForFixedAdjustElement: function (property, value) {\n                if (_this.fixedAdjustElement) {\n                    _this.fixedAdjustElement.style.setProperty(property, value);\n                }\n            },\n        };\n        // tslint:enable:object-literal-sort-keys\n        return new MDCToolbarFoundation(adapter);\n    };\n    return MDCToolbar;\n}(MDCComponent));\nexport { MDCToolbar };\n//# sourceMappingURL=component.js.map"]},"metadata":{},"sourceType":"module"}