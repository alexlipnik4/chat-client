{"ast":null,"code":"/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCFloatingLabel } from '@material/floating-label/component';\nimport { MDCLineRipple } from '@material/line-ripple/component';\nimport * as menuSurfaceConstants from '@material/menu-surface/constants';\nimport { MDCMenu } from '@material/menu/component';\nimport * as menuConstants from '@material/menu/constants';\nimport { MDCNotchedOutline } from '@material/notched-outline/component';\nimport { MDCRipple } from '@material/ripple/component';\nimport { MDCRippleFoundation } from '@material/ripple/foundation';\nimport { cssClasses, strings } from './constants';\nimport { MDCSelectFoundation } from './foundation';\nimport { MDCSelectHelperText } from './helper-text/component';\nimport { MDCSelectIcon } from './icon/component';\nvar VALIDATION_ATTR_WHITELIST = ['required', 'aria-required'];\n\nvar MDCSelect =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MDCSelect, _super);\n\n  function MDCSelect() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MDCSelect.attachTo = function (root) {\n    return new MDCSelect(root);\n  };\n\n  MDCSelect.prototype.initialize = function (labelFactory, lineRippleFactory, outlineFactory, menuFactory, iconFactory, helperTextFactory) {\n    if (labelFactory === void 0) {\n      labelFactory = function (el) {\n        return new MDCFloatingLabel(el);\n      };\n    }\n\n    if (lineRippleFactory === void 0) {\n      lineRippleFactory = function (el) {\n        return new MDCLineRipple(el);\n      };\n    }\n\n    if (outlineFactory === void 0) {\n      outlineFactory = function (el) {\n        return new MDCNotchedOutline(el);\n      };\n    }\n\n    if (menuFactory === void 0) {\n      menuFactory = function (el) {\n        return new MDCMenu(el);\n      };\n    }\n\n    if (iconFactory === void 0) {\n      iconFactory = function (el) {\n        return new MDCSelectIcon(el);\n      };\n    }\n\n    if (helperTextFactory === void 0) {\n      helperTextFactory = function (el) {\n        return new MDCSelectHelperText(el);\n      };\n    }\n\n    this.isMenuOpen_ = false;\n    this.nativeControl_ = this.root_.querySelector(strings.NATIVE_CONTROL_SELECTOR);\n    this.selectedText_ = this.root_.querySelector(strings.SELECTED_TEXT_SELECTOR);\n    var targetElement = this.nativeControl_ || this.selectedText_;\n\n    if (!targetElement) {\n      throw new Error('MDCSelect: Missing required element: Exactly one of the following selectors must be present: ' + (\"'\" + strings.NATIVE_CONTROL_SELECTOR + \"' or '\" + strings.SELECTED_TEXT_SELECTOR + \"'\"));\n    }\n\n    this.targetElement_ = targetElement;\n\n    if (this.targetElement_.hasAttribute(strings.ARIA_CONTROLS)) {\n      var helperTextElement = document.getElementById(this.targetElement_.getAttribute(strings.ARIA_CONTROLS));\n\n      if (helperTextElement) {\n        this.helperText_ = helperTextFactory(helperTextElement);\n      }\n    }\n\n    if (this.selectedText_) {\n      this.enhancedSelectSetup_(menuFactory);\n    }\n\n    var labelElement = this.root_.querySelector(strings.LABEL_SELECTOR);\n    this.label_ = labelElement ? labelFactory(labelElement) : null;\n    var lineRippleElement = this.root_.querySelector(strings.LINE_RIPPLE_SELECTOR);\n    this.lineRipple_ = lineRippleElement ? lineRippleFactory(lineRippleElement) : null;\n    var outlineElement = this.root_.querySelector(strings.OUTLINE_SELECTOR);\n    this.outline_ = outlineElement ? outlineFactory(outlineElement) : null;\n    var leadingIcon = this.root_.querySelector(strings.LEADING_ICON_SELECTOR);\n\n    if (leadingIcon) {\n      this.root_.classList.add(cssClasses.WITH_LEADING_ICON);\n      this.leadingIcon_ = iconFactory(leadingIcon);\n\n      if (this.menuElement_) {\n        this.menuElement_.classList.add(cssClasses.WITH_LEADING_ICON);\n      }\n    }\n\n    if (!this.root_.classList.contains(cssClasses.OUTLINED)) {\n      this.ripple = this.createRipple_();\n    } // The required state needs to be sync'd before the mutation observer is added.\n\n\n    this.initialSyncRequiredState_();\n    this.addMutationObserverForRequired_();\n  };\n  /**\n   * Initializes the select's event listeners and internal state based\n   * on the environment's state.\n   */\n\n\n  MDCSelect.prototype.initialSyncWithDOM = function () {\n    var _this = this;\n\n    this.handleChange_ = function () {\n      return _this.foundation_.handleChange(\n      /* didChange */\n      true);\n    };\n\n    this.handleFocus_ = function () {\n      return _this.foundation_.handleFocus();\n    };\n\n    this.handleBlur_ = function () {\n      return _this.foundation_.handleBlur();\n    };\n\n    this.handleClick_ = function (evt) {\n      if (_this.selectedText_) {\n        _this.selectedText_.focus();\n      }\n\n      _this.foundation_.handleClick(_this.getNormalizedXCoordinate_(evt));\n    };\n\n    this.handleKeydown_ = function (evt) {\n      return _this.foundation_.handleKeydown(evt);\n    };\n\n    this.handleMenuSelected_ = function (evtData) {\n      return _this.selectedIndex = evtData.detail.index;\n    };\n\n    this.handleMenuOpened_ = function () {\n      _this.foundation_.handleMenuOpened();\n\n      if (_this.menu_.items.length === 0) {\n        return;\n      } // Menu should open to the last selected element, should open to first menu item otherwise.\n\n\n      var focusItemIndex = _this.selectedIndex >= 0 ? _this.selectedIndex : 0;\n      var focusItemEl = _this.menu_.items[focusItemIndex];\n      focusItemEl.focus();\n    };\n\n    this.handleMenuClosed_ = function () {\n      _this.foundation_.handleMenuClosed(); // isMenuOpen_ is used to track the state of the menu opening or closing since the menu.open function\n      // will return false if the menu is still closing and this method listens to the closed event which\n      // occurs after the menu is already closed.\n\n\n      _this.isMenuOpen_ = false;\n\n      _this.selectedText_.removeAttribute('aria-expanded');\n\n      if (document.activeElement !== _this.selectedText_) {\n        _this.foundation_.handleBlur();\n      }\n    };\n\n    this.targetElement_.addEventListener('change', this.handleChange_);\n    this.targetElement_.addEventListener('focus', this.handleFocus_);\n    this.targetElement_.addEventListener('blur', this.handleBlur_);\n    this.targetElement_.addEventListener('click', this.handleClick_);\n\n    if (this.menuElement_) {\n      this.selectedText_.addEventListener('keydown', this.handleKeydown_);\n      this.menu_.listen(menuSurfaceConstants.strings.CLOSED_EVENT, this.handleMenuClosed_);\n      this.menu_.listen(menuSurfaceConstants.strings.OPENED_EVENT, this.handleMenuOpened_);\n      this.menu_.listen(menuConstants.strings.SELECTED_EVENT, this.handleMenuSelected_);\n\n      if (this.hiddenInput_ && this.hiddenInput_.value) {\n        // If the hidden input already has a value, use it to restore the select's value.\n        // This can happen e.g. if the user goes back or (in some browsers) refreshes the page.\n        var enhancedAdapterMethods = this.getEnhancedSelectAdapterMethods_();\n        enhancedAdapterMethods.setValue(this.hiddenInput_.value);\n      } else if (this.menuElement_.querySelector(strings.SELECTED_ITEM_SELECTOR)) {\n        // If an element is selected, the select should set the initial selected text.\n        var enhancedAdapterMethods = this.getEnhancedSelectAdapterMethods_();\n        enhancedAdapterMethods.setValue(enhancedAdapterMethods.getValue());\n      }\n    } // Initially sync floating label\n\n\n    this.foundation_.handleChange(\n    /* didChange */\n    false);\n\n    if (this.root_.classList.contains(cssClasses.DISABLED) || this.nativeControl_ && this.nativeControl_.disabled) {\n      this.disabled = true;\n    }\n  };\n\n  MDCSelect.prototype.destroy = function () {\n    this.targetElement_.removeEventListener('change', this.handleChange_);\n    this.targetElement_.removeEventListener('focus', this.handleFocus_);\n    this.targetElement_.removeEventListener('blur', this.handleBlur_);\n    this.targetElement_.removeEventListener('keydown', this.handleKeydown_);\n    this.targetElement_.removeEventListener('click', this.handleClick_);\n\n    if (this.menu_) {\n      this.menu_.unlisten(menuSurfaceConstants.strings.CLOSED_EVENT, this.handleMenuClosed_);\n      this.menu_.unlisten(menuSurfaceConstants.strings.OPENED_EVENT, this.handleMenuOpened_);\n      this.menu_.unlisten(menuConstants.strings.SELECTED_EVENT, this.handleMenuSelected_);\n      this.menu_.destroy();\n    }\n\n    if (this.ripple) {\n      this.ripple.destroy();\n    }\n\n    if (this.outline_) {\n      this.outline_.destroy();\n    }\n\n    if (this.leadingIcon_) {\n      this.leadingIcon_.destroy();\n    }\n\n    if (this.helperText_) {\n      this.helperText_.destroy();\n    }\n\n    if (this.validationObserver_) {\n      this.validationObserver_.disconnect();\n    }\n\n    _super.prototype.destroy.call(this);\n  };\n\n  Object.defineProperty(MDCSelect.prototype, \"value\", {\n    get: function () {\n      return this.foundation_.getValue();\n    },\n    set: function (value) {\n      this.foundation_.setValue(value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCSelect.prototype, \"selectedIndex\", {\n    get: function () {\n      var selectedIndex = -1;\n\n      if (this.menuElement_ && this.menu_) {\n        var selectedEl = this.menuElement_.querySelector(strings.SELECTED_ITEM_SELECTOR);\n        selectedIndex = this.menu_.items.indexOf(selectedEl);\n      } else if (this.nativeControl_) {\n        selectedIndex = this.nativeControl_.selectedIndex;\n      }\n\n      return selectedIndex;\n    },\n    set: function (selectedIndex) {\n      this.foundation_.setSelectedIndex(selectedIndex);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCSelect.prototype, \"disabled\", {\n    get: function () {\n      return this.root_.classList.contains(cssClasses.DISABLED) || (this.nativeControl_ ? this.nativeControl_.disabled : false);\n    },\n    set: function (disabled) {\n      this.foundation_.setDisabled(disabled);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCSelect.prototype, \"leadingIconAriaLabel\", {\n    set: function (label) {\n      this.foundation_.setLeadingIconAriaLabel(label);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCSelect.prototype, \"leadingIconContent\", {\n    /**\n     * Sets the text content of the leading icon.\n     */\n    set: function (content) {\n      this.foundation_.setLeadingIconContent(content);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCSelect.prototype, \"helperTextContent\", {\n    /**\n     * Sets the text content of the helper text.\n     */\n    set: function (content) {\n      this.foundation_.setHelperTextContent(content);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCSelect.prototype, \"valid\", {\n    /**\n     * Checks if the select is in a valid state.\n     */\n    get: function () {\n      return this.foundation_.isValid();\n    },\n\n    /**\n     * Sets the current invalid state of the select.\n     */\n    set: function (isValid) {\n      this.foundation_.setValid(isValid);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCSelect.prototype, \"required\", {\n    /**\n     * Returns whether the select is required.\n     */\n    get: function () {\n      if (this.nativeControl_) {\n        return this.nativeControl_.required;\n      } else {\n        return this.selectedText_.getAttribute('aria-required') === 'true';\n      }\n    },\n\n    /**\n     * Sets the control to the required state.\n     */\n    set: function (isRequired) {\n      if (this.nativeControl_) {\n        this.nativeControl_.required = isRequired;\n      } else {\n        if (isRequired) {\n          this.selectedText_.setAttribute('aria-required', isRequired.toString());\n        } else {\n          this.selectedText_.removeAttribute('aria-required');\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Recomputes the outline SVG path for the outline element.\n   */\n\n  MDCSelect.prototype.layout = function () {\n    this.foundation_.layout();\n  };\n\n  MDCSelect.prototype.getDefaultFoundation = function () {\n    // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    var adapter = tslib_1.__assign({}, this.nativeControl_ ? this.getNativeSelectAdapterMethods_() : this.getEnhancedSelectAdapterMethods_(), this.getCommonAdapterMethods_(), this.getOutlineAdapterMethods_(), this.getLabelAdapterMethods_());\n\n    return new MDCSelectFoundation(adapter, this.getFoundationMap_());\n  };\n  /**\n   * Handles setup for the enhanced menu.\n   */\n\n\n  MDCSelect.prototype.enhancedSelectSetup_ = function (menuFactory) {\n    var isDisabled = this.root_.classList.contains(cssClasses.DISABLED);\n    this.selectedText_.setAttribute('tabindex', isDisabled ? '-1' : '0');\n    this.hiddenInput_ = this.root_.querySelector(strings.HIDDEN_INPUT_SELECTOR);\n    this.menuElement_ = this.root_.querySelector(strings.MENU_SELECTOR);\n    this.menu_ = menuFactory(this.menuElement_);\n    this.menu_.hoistMenuToBody();\n    this.menu_.setAnchorElement(this.root_);\n    this.menu_.setAnchorCorner(menuSurfaceConstants.Corner.BOTTOM_START);\n    this.menu_.wrapFocus = false;\n  };\n\n  MDCSelect.prototype.createRipple_ = function () {\n    var _this = this; // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    var adapter = tslib_1.__assign({}, MDCRipple.createAdapter(this), {\n      registerInteractionHandler: function (evtType, handler) {\n        return _this.targetElement_.addEventListener(evtType, handler);\n      },\n      deregisterInteractionHandler: function (evtType, handler) {\n        return _this.targetElement_.removeEventListener(evtType, handler);\n      }\n    }); // tslint:enable:object-literal-sort-keys\n\n\n    return new MDCRipple(this.root_, new MDCRippleFoundation(adapter));\n  };\n\n  MDCSelect.prototype.getNativeSelectAdapterMethods_ = function () {\n    var _this = this; // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    return {\n      getValue: function () {\n        return _this.nativeControl_.value;\n      },\n      setValue: function (value) {\n        _this.nativeControl_.value = value;\n      },\n      openMenu: function () {\n        return undefined;\n      },\n      closeMenu: function () {\n        return undefined;\n      },\n      isMenuOpen: function () {\n        return false;\n      },\n      setSelectedIndex: function (index) {\n        _this.nativeControl_.selectedIndex = index;\n      },\n      setDisabled: function (isDisabled) {\n        _this.nativeControl_.disabled = isDisabled;\n      },\n      setValid: function (isValid) {\n        if (isValid) {\n          _this.root_.classList.remove(cssClasses.INVALID);\n        } else {\n          _this.root_.classList.add(cssClasses.INVALID);\n        }\n      },\n      checkValidity: function () {\n        return _this.nativeControl_.checkValidity();\n      }\n    }; // tslint:enable:object-literal-sort-keys\n  };\n\n  MDCSelect.prototype.getEnhancedSelectAdapterMethods_ = function () {\n    var _this = this; // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    return {\n      getValue: function () {\n        var listItem = _this.menuElement_.querySelector(strings.SELECTED_ITEM_SELECTOR);\n\n        if (listItem && listItem.hasAttribute(strings.ENHANCED_VALUE_ATTR)) {\n          return listItem.getAttribute(strings.ENHANCED_VALUE_ATTR) || '';\n        }\n\n        return '';\n      },\n      setValue: function (value) {\n        var element = _this.menuElement_.querySelector(\"[\" + strings.ENHANCED_VALUE_ATTR + \"=\\\"\" + value + \"\\\"]\");\n\n        _this.setEnhancedSelectedIndex_(element ? _this.menu_.items.indexOf(element) : -1);\n      },\n      openMenu: function () {\n        if (_this.menu_ && !_this.menu_.open) {\n          _this.menu_.open = true;\n          _this.isMenuOpen_ = true;\n\n          _this.selectedText_.setAttribute('aria-expanded', 'true');\n        }\n      },\n      closeMenu: function () {\n        if (_this.menu_ && _this.menu_.open) {\n          _this.menu_.open = false;\n        }\n      },\n      isMenuOpen: function () {\n        return Boolean(_this.menu_) && _this.isMenuOpen_;\n      },\n      setSelectedIndex: function (index) {\n        return _this.setEnhancedSelectedIndex_(index);\n      },\n      setDisabled: function (isDisabled) {\n        _this.selectedText_.setAttribute('tabindex', isDisabled ? '-1' : '0');\n\n        _this.selectedText_.setAttribute('aria-disabled', isDisabled.toString());\n\n        if (_this.hiddenInput_) {\n          _this.hiddenInput_.disabled = isDisabled;\n        }\n      },\n      checkValidity: function () {\n        var classList = _this.root_.classList;\n\n        if (classList.contains(cssClasses.REQUIRED) && !classList.contains(cssClasses.DISABLED)) {\n          // See notes for required attribute under https://www.w3.org/TR/html52/sec-forms.html#the-select-element\n          // TL;DR: Invalid if no index is selected, or if the first index is selected and has an empty value.\n          return _this.selectedIndex !== -1 && (_this.selectedIndex !== 0 || Boolean(_this.value));\n        } else {\n          return true;\n        }\n      },\n      setValid: function (isValid) {\n        _this.selectedText_.setAttribute('aria-invalid', (!isValid).toString());\n\n        if (isValid) {\n          _this.root_.classList.remove(cssClasses.INVALID);\n        } else {\n          _this.root_.classList.add(cssClasses.INVALID);\n        }\n      }\n    }; // tslint:enable:object-literal-sort-keys\n  };\n\n  MDCSelect.prototype.getCommonAdapterMethods_ = function () {\n    var _this = this; // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    return {\n      addClass: function (className) {\n        return _this.root_.classList.add(className);\n      },\n      removeClass: function (className) {\n        return _this.root_.classList.remove(className);\n      },\n      hasClass: function (className) {\n        return _this.root_.classList.contains(className);\n      },\n      setRippleCenter: function (normalizedX) {\n        return _this.lineRipple_ && _this.lineRipple_.setRippleCenter(normalizedX);\n      },\n      activateBottomLine: function () {\n        return _this.lineRipple_ && _this.lineRipple_.activate();\n      },\n      deactivateBottomLine: function () {\n        return _this.lineRipple_ && _this.lineRipple_.deactivate();\n      },\n      notifyChange: function (value) {\n        var index = _this.selectedIndex;\n\n        _this.emit(strings.CHANGE_EVENT, {\n          value: value,\n          index: index\n        }, true\n        /* shouldBubble  */\n        );\n      }\n    }; // tslint:enable:object-literal-sort-keys\n  };\n\n  MDCSelect.prototype.getOutlineAdapterMethods_ = function () {\n    var _this = this; // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    return {\n      hasOutline: function () {\n        return Boolean(_this.outline_);\n      },\n      notchOutline: function (labelWidth) {\n        return _this.outline_ && _this.outline_.notch(labelWidth);\n      },\n      closeOutline: function () {\n        return _this.outline_ && _this.outline_.closeNotch();\n      }\n    }; // tslint:enable:object-literal-sort-keys\n  };\n\n  MDCSelect.prototype.getLabelAdapterMethods_ = function () {\n    var _this = this;\n\n    return {\n      floatLabel: function (shouldFloat) {\n        return _this.label_ && _this.label_.float(shouldFloat);\n      },\n      getLabelWidth: function () {\n        return _this.label_ ? _this.label_.getWidth() : 0;\n      }\n    };\n  };\n  /**\n   * Calculates where the line ripple should start based on the x coordinate within the component.\n   */\n\n\n  MDCSelect.prototype.getNormalizedXCoordinate_ = function (evt) {\n    var targetClientRect = evt.target.getBoundingClientRect();\n    var xCoordinate = this.isTouchEvent_(evt) ? evt.touches[0].clientX : evt.clientX;\n    return xCoordinate - targetClientRect.left;\n  };\n\n  MDCSelect.prototype.isTouchEvent_ = function (evt) {\n    return Boolean(evt.touches);\n  };\n  /**\n   * Returns a map of all subcomponents to subfoundations.\n   */\n\n\n  MDCSelect.prototype.getFoundationMap_ = function () {\n    return {\n      helperText: this.helperText_ ? this.helperText_.foundation : undefined,\n      leadingIcon: this.leadingIcon_ ? this.leadingIcon_.foundation : undefined\n    };\n  };\n\n  MDCSelect.prototype.setEnhancedSelectedIndex_ = function (index) {\n    var selectedItem = this.menu_.items[index];\n    this.selectedText_.textContent = selectedItem ? selectedItem.textContent.trim() : '';\n    var previouslySelected = this.menuElement_.querySelector(strings.SELECTED_ITEM_SELECTOR);\n\n    if (previouslySelected) {\n      previouslySelected.classList.remove(cssClasses.SELECTED_ITEM_CLASS);\n      previouslySelected.removeAttribute(strings.ARIA_SELECTED_ATTR);\n    }\n\n    if (selectedItem) {\n      selectedItem.classList.add(cssClasses.SELECTED_ITEM_CLASS);\n      selectedItem.setAttribute(strings.ARIA_SELECTED_ATTR, 'true');\n    } // Synchronize hidden input's value with data-value attribute of selected item.\n    // This code path is also followed when setting value directly, so this covers all cases.\n\n\n    if (this.hiddenInput_) {\n      this.hiddenInput_.value = selectedItem ? selectedItem.getAttribute(strings.ENHANCED_VALUE_ATTR) || '' : '';\n    }\n\n    this.layout();\n  };\n\n  MDCSelect.prototype.initialSyncRequiredState_ = function () {\n    var isRequired = this.targetElement_.required || this.targetElement_.getAttribute('aria-required') === 'true' || this.root_.classList.contains(cssClasses.REQUIRED);\n\n    if (isRequired) {\n      if (this.nativeControl_) {\n        this.nativeControl_.required = true;\n      } else {\n        this.selectedText_.setAttribute('aria-required', 'true');\n      }\n\n      this.root_.classList.add(cssClasses.REQUIRED);\n    }\n  };\n\n  MDCSelect.prototype.addMutationObserverForRequired_ = function () {\n    var _this = this;\n\n    var observerHandler = function (attributesList) {\n      attributesList.some(function (attributeName) {\n        if (VALIDATION_ATTR_WHITELIST.indexOf(attributeName) === -1) {\n          return false;\n        }\n\n        if (_this.selectedText_) {\n          if (_this.selectedText_.getAttribute('aria-required') === 'true') {\n            _this.root_.classList.add(cssClasses.REQUIRED);\n          } else {\n            _this.root_.classList.remove(cssClasses.REQUIRED);\n          }\n        } else {\n          if (_this.nativeControl_.required) {\n            _this.root_.classList.add(cssClasses.REQUIRED);\n          } else {\n            _this.root_.classList.remove(cssClasses.REQUIRED);\n          }\n        }\n\n        return true;\n      });\n    };\n\n    var getAttributesList = function (mutationsList) {\n      return mutationsList.map(function (mutation) {\n        return mutation.attributeName;\n      }).filter(function (attributeName) {\n        return attributeName;\n      });\n    };\n\n    var observer = new MutationObserver(function (mutationsList) {\n      return observerHandler(getAttributesList(mutationsList));\n    });\n    observer.observe(this.targetElement_, {\n      attributes: true\n    });\n    this.validationObserver_ = observer;\n  };\n\n  return MDCSelect;\n}(MDCComponent);\n\nexport { MDCSelect };","map":{"version":3,"sources":["component.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCFloatingLabel } from '@material/floating-label/component';\nimport { MDCLineRipple } from '@material/line-ripple/component';\nimport * as menuSurfaceConstants from '@material/menu-surface/constants';\nimport { MDCMenu } from '@material/menu/component';\nimport * as menuConstants from '@material/menu/constants';\nimport { MDCNotchedOutline } from '@material/notched-outline/component';\nimport { MDCRipple } from '@material/ripple/component';\nimport { MDCRippleFoundation } from '@material/ripple/foundation';\nimport { cssClasses, strings } from './constants';\nimport { MDCSelectFoundation } from './foundation';\nimport { MDCSelectHelperText } from './helper-text/component';\nimport { MDCSelectIcon } from './icon/component';\nvar VALIDATION_ATTR_WHITELIST = ['required', 'aria-required'];\nvar MDCSelect = /** @class */ (function (_super) {\n    tslib_1.__extends(MDCSelect, _super);\n    function MDCSelect() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCSelect.attachTo = function (root) {\n        return new MDCSelect(root);\n    };\n    MDCSelect.prototype.initialize = function (labelFactory, lineRippleFactory, outlineFactory, menuFactory, iconFactory, helperTextFactory) {\n        if (labelFactory === void 0) { labelFactory = function (el) { return new MDCFloatingLabel(el); }; }\n        if (lineRippleFactory === void 0) { lineRippleFactory = function (el) { return new MDCLineRipple(el); }; }\n        if (outlineFactory === void 0) { outlineFactory = function (el) { return new MDCNotchedOutline(el); }; }\n        if (menuFactory === void 0) { menuFactory = function (el) { return new MDCMenu(el); }; }\n        if (iconFactory === void 0) { iconFactory = function (el) { return new MDCSelectIcon(el); }; }\n        if (helperTextFactory === void 0) { helperTextFactory = function (el) { return new MDCSelectHelperText(el); }; }\n        this.isMenuOpen_ = false;\n        this.nativeControl_ = this.root_.querySelector(strings.NATIVE_CONTROL_SELECTOR);\n        this.selectedText_ = this.root_.querySelector(strings.SELECTED_TEXT_SELECTOR);\n        var targetElement = this.nativeControl_ || this.selectedText_;\n        if (!targetElement) {\n            throw new Error('MDCSelect: Missing required element: Exactly one of the following selectors must be present: ' +\n                (\"'\" + strings.NATIVE_CONTROL_SELECTOR + \"' or '\" + strings.SELECTED_TEXT_SELECTOR + \"'\"));\n        }\n        this.targetElement_ = targetElement;\n        if (this.targetElement_.hasAttribute(strings.ARIA_CONTROLS)) {\n            var helperTextElement = document.getElementById(this.targetElement_.getAttribute(strings.ARIA_CONTROLS));\n            if (helperTextElement) {\n                this.helperText_ = helperTextFactory(helperTextElement);\n            }\n        }\n        if (this.selectedText_) {\n            this.enhancedSelectSetup_(menuFactory);\n        }\n        var labelElement = this.root_.querySelector(strings.LABEL_SELECTOR);\n        this.label_ = labelElement ? labelFactory(labelElement) : null;\n        var lineRippleElement = this.root_.querySelector(strings.LINE_RIPPLE_SELECTOR);\n        this.lineRipple_ = lineRippleElement ? lineRippleFactory(lineRippleElement) : null;\n        var outlineElement = this.root_.querySelector(strings.OUTLINE_SELECTOR);\n        this.outline_ = outlineElement ? outlineFactory(outlineElement) : null;\n        var leadingIcon = this.root_.querySelector(strings.LEADING_ICON_SELECTOR);\n        if (leadingIcon) {\n            this.root_.classList.add(cssClasses.WITH_LEADING_ICON);\n            this.leadingIcon_ = iconFactory(leadingIcon);\n            if (this.menuElement_) {\n                this.menuElement_.classList.add(cssClasses.WITH_LEADING_ICON);\n            }\n        }\n        if (!this.root_.classList.contains(cssClasses.OUTLINED)) {\n            this.ripple = this.createRipple_();\n        }\n        // The required state needs to be sync'd before the mutation observer is added.\n        this.initialSyncRequiredState_();\n        this.addMutationObserverForRequired_();\n    };\n    /**\n     * Initializes the select's event listeners and internal state based\n     * on the environment's state.\n     */\n    MDCSelect.prototype.initialSyncWithDOM = function () {\n        var _this = this;\n        this.handleChange_ = function () { return _this.foundation_.handleChange(/* didChange */ true); };\n        this.handleFocus_ = function () { return _this.foundation_.handleFocus(); };\n        this.handleBlur_ = function () { return _this.foundation_.handleBlur(); };\n        this.handleClick_ = function (evt) {\n            if (_this.selectedText_) {\n                _this.selectedText_.focus();\n            }\n            _this.foundation_.handleClick(_this.getNormalizedXCoordinate_(evt));\n        };\n        this.handleKeydown_ = function (evt) { return _this.foundation_.handleKeydown(evt); };\n        this.handleMenuSelected_ = function (evtData) { return _this.selectedIndex = evtData.detail.index; };\n        this.handleMenuOpened_ = function () {\n            _this.foundation_.handleMenuOpened();\n            if (_this.menu_.items.length === 0) {\n                return;\n            }\n            // Menu should open to the last selected element, should open to first menu item otherwise.\n            var focusItemIndex = _this.selectedIndex >= 0 ? _this.selectedIndex : 0;\n            var focusItemEl = _this.menu_.items[focusItemIndex];\n            focusItemEl.focus();\n        };\n        this.handleMenuClosed_ = function () {\n            _this.foundation_.handleMenuClosed();\n            // isMenuOpen_ is used to track the state of the menu opening or closing since the menu.open function\n            // will return false if the menu is still closing and this method listens to the closed event which\n            // occurs after the menu is already closed.\n            _this.isMenuOpen_ = false;\n            _this.selectedText_.removeAttribute('aria-expanded');\n            if (document.activeElement !== _this.selectedText_) {\n                _this.foundation_.handleBlur();\n            }\n        };\n        this.targetElement_.addEventListener('change', this.handleChange_);\n        this.targetElement_.addEventListener('focus', this.handleFocus_);\n        this.targetElement_.addEventListener('blur', this.handleBlur_);\n        this.targetElement_.addEventListener('click', this.handleClick_);\n        if (this.menuElement_) {\n            this.selectedText_.addEventListener('keydown', this.handleKeydown_);\n            this.menu_.listen(menuSurfaceConstants.strings.CLOSED_EVENT, this.handleMenuClosed_);\n            this.menu_.listen(menuSurfaceConstants.strings.OPENED_EVENT, this.handleMenuOpened_);\n            this.menu_.listen(menuConstants.strings.SELECTED_EVENT, this.handleMenuSelected_);\n            if (this.hiddenInput_ && this.hiddenInput_.value) {\n                // If the hidden input already has a value, use it to restore the select's value.\n                // This can happen e.g. if the user goes back or (in some browsers) refreshes the page.\n                var enhancedAdapterMethods = this.getEnhancedSelectAdapterMethods_();\n                enhancedAdapterMethods.setValue(this.hiddenInput_.value);\n            }\n            else if (this.menuElement_.querySelector(strings.SELECTED_ITEM_SELECTOR)) {\n                // If an element is selected, the select should set the initial selected text.\n                var enhancedAdapterMethods = this.getEnhancedSelectAdapterMethods_();\n                enhancedAdapterMethods.setValue(enhancedAdapterMethods.getValue());\n            }\n        }\n        // Initially sync floating label\n        this.foundation_.handleChange(/* didChange */ false);\n        if (this.root_.classList.contains(cssClasses.DISABLED)\n            || (this.nativeControl_ && this.nativeControl_.disabled)) {\n            this.disabled = true;\n        }\n    };\n    MDCSelect.prototype.destroy = function () {\n        this.targetElement_.removeEventListener('change', this.handleChange_);\n        this.targetElement_.removeEventListener('focus', this.handleFocus_);\n        this.targetElement_.removeEventListener('blur', this.handleBlur_);\n        this.targetElement_.removeEventListener('keydown', this.handleKeydown_);\n        this.targetElement_.removeEventListener('click', this.handleClick_);\n        if (this.menu_) {\n            this.menu_.unlisten(menuSurfaceConstants.strings.CLOSED_EVENT, this.handleMenuClosed_);\n            this.menu_.unlisten(menuSurfaceConstants.strings.OPENED_EVENT, this.handleMenuOpened_);\n            this.menu_.unlisten(menuConstants.strings.SELECTED_EVENT, this.handleMenuSelected_);\n            this.menu_.destroy();\n        }\n        if (this.ripple) {\n            this.ripple.destroy();\n        }\n        if (this.outline_) {\n            this.outline_.destroy();\n        }\n        if (this.leadingIcon_) {\n            this.leadingIcon_.destroy();\n        }\n        if (this.helperText_) {\n            this.helperText_.destroy();\n        }\n        if (this.validationObserver_) {\n            this.validationObserver_.disconnect();\n        }\n        _super.prototype.destroy.call(this);\n    };\n    Object.defineProperty(MDCSelect.prototype, \"value\", {\n        get: function () {\n            return this.foundation_.getValue();\n        },\n        set: function (value) {\n            this.foundation_.setValue(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSelect.prototype, \"selectedIndex\", {\n        get: function () {\n            var selectedIndex = -1;\n            if (this.menuElement_ && this.menu_) {\n                var selectedEl = this.menuElement_.querySelector(strings.SELECTED_ITEM_SELECTOR);\n                selectedIndex = this.menu_.items.indexOf(selectedEl);\n            }\n            else if (this.nativeControl_) {\n                selectedIndex = this.nativeControl_.selectedIndex;\n            }\n            return selectedIndex;\n        },\n        set: function (selectedIndex) {\n            this.foundation_.setSelectedIndex(selectedIndex);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSelect.prototype, \"disabled\", {\n        get: function () {\n            return this.root_.classList.contains(cssClasses.DISABLED) ||\n                (this.nativeControl_ ? this.nativeControl_.disabled : false);\n        },\n        set: function (disabled) {\n            this.foundation_.setDisabled(disabled);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSelect.prototype, \"leadingIconAriaLabel\", {\n        set: function (label) {\n            this.foundation_.setLeadingIconAriaLabel(label);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSelect.prototype, \"leadingIconContent\", {\n        /**\n         * Sets the text content of the leading icon.\n         */\n        set: function (content) {\n            this.foundation_.setLeadingIconContent(content);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSelect.prototype, \"helperTextContent\", {\n        /**\n         * Sets the text content of the helper text.\n         */\n        set: function (content) {\n            this.foundation_.setHelperTextContent(content);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSelect.prototype, \"valid\", {\n        /**\n         * Checks if the select is in a valid state.\n         */\n        get: function () {\n            return this.foundation_.isValid();\n        },\n        /**\n         * Sets the current invalid state of the select.\n         */\n        set: function (isValid) {\n            this.foundation_.setValid(isValid);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSelect.prototype, \"required\", {\n        /**\n         * Returns whether the select is required.\n         */\n        get: function () {\n            if (this.nativeControl_) {\n                return this.nativeControl_.required;\n            }\n            else {\n                return this.selectedText_.getAttribute('aria-required') === 'true';\n            }\n        },\n        /**\n         * Sets the control to the required state.\n         */\n        set: function (isRequired) {\n            if (this.nativeControl_) {\n                this.nativeControl_.required = isRequired;\n            }\n            else {\n                if (isRequired) {\n                    this.selectedText_.setAttribute('aria-required', isRequired.toString());\n                }\n                else {\n                    this.selectedText_.removeAttribute('aria-required');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Recomputes the outline SVG path for the outline element.\n     */\n    MDCSelect.prototype.layout = function () {\n        this.foundation_.layout();\n    };\n    MDCSelect.prototype.getDefaultFoundation = function () {\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var adapter = tslib_1.__assign({}, (this.nativeControl_ ? this.getNativeSelectAdapterMethods_() : this.getEnhancedSelectAdapterMethods_()), this.getCommonAdapterMethods_(), this.getOutlineAdapterMethods_(), this.getLabelAdapterMethods_());\n        return new MDCSelectFoundation(adapter, this.getFoundationMap_());\n    };\n    /**\n     * Handles setup for the enhanced menu.\n     */\n    MDCSelect.prototype.enhancedSelectSetup_ = function (menuFactory) {\n        var isDisabled = this.root_.classList.contains(cssClasses.DISABLED);\n        this.selectedText_.setAttribute('tabindex', isDisabled ? '-1' : '0');\n        this.hiddenInput_ = this.root_.querySelector(strings.HIDDEN_INPUT_SELECTOR);\n        this.menuElement_ = this.root_.querySelector(strings.MENU_SELECTOR);\n        this.menu_ = menuFactory(this.menuElement_);\n        this.menu_.hoistMenuToBody();\n        this.menu_.setAnchorElement(this.root_);\n        this.menu_.setAnchorCorner(menuSurfaceConstants.Corner.BOTTOM_START);\n        this.menu_.wrapFocus = false;\n    };\n    MDCSelect.prototype.createRipple_ = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        var adapter = tslib_1.__assign({}, MDCRipple.createAdapter(this), { registerInteractionHandler: function (evtType, handler) { return _this.targetElement_.addEventListener(evtType, handler); }, deregisterInteractionHandler: function (evtType, handler) { return _this.targetElement_.removeEventListener(evtType, handler); } });\n        // tslint:enable:object-literal-sort-keys\n        return new MDCRipple(this.root_, new MDCRippleFoundation(adapter));\n    };\n    MDCSelect.prototype.getNativeSelectAdapterMethods_ = function () {\n        var _this = this;\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        return {\n            getValue: function () { return _this.nativeControl_.value; },\n            setValue: function (value) {\n                _this.nativeControl_.value = value;\n            },\n            openMenu: function () { return undefined; },\n            closeMenu: function () { return undefined; },\n            isMenuOpen: function () { return false; },\n            setSelectedIndex: function (index) {\n                _this.nativeControl_.selectedIndex = index;\n            },\n            setDisabled: function (isDisabled) {\n                _this.nativeControl_.disabled = isDisabled;\n            },\n            setValid: function (isValid) {\n                if (isValid) {\n                    _this.root_.classList.remove(cssClasses.INVALID);\n                }\n                else {\n                    _this.root_.classList.add(cssClasses.INVALID);\n                }\n            },\n            checkValidity: function () { return _this.nativeControl_.checkValidity(); },\n        };\n        // tslint:enable:object-literal-sort-keys\n    };\n    MDCSelect.prototype.getEnhancedSelectAdapterMethods_ = function () {\n        var _this = this;\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        return {\n            getValue: function () {\n                var listItem = _this.menuElement_.querySelector(strings.SELECTED_ITEM_SELECTOR);\n                if (listItem && listItem.hasAttribute(strings.ENHANCED_VALUE_ATTR)) {\n                    return listItem.getAttribute(strings.ENHANCED_VALUE_ATTR) || '';\n                }\n                return '';\n            },\n            setValue: function (value) {\n                var element = _this.menuElement_.querySelector(\"[\" + strings.ENHANCED_VALUE_ATTR + \"=\\\"\" + value + \"\\\"]\");\n                _this.setEnhancedSelectedIndex_(element ? _this.menu_.items.indexOf(element) : -1);\n            },\n            openMenu: function () {\n                if (_this.menu_ && !_this.menu_.open) {\n                    _this.menu_.open = true;\n                    _this.isMenuOpen_ = true;\n                    _this.selectedText_.setAttribute('aria-expanded', 'true');\n                }\n            },\n            closeMenu: function () {\n                if (_this.menu_ && _this.menu_.open) {\n                    _this.menu_.open = false;\n                }\n            },\n            isMenuOpen: function () { return Boolean(_this.menu_) && _this.isMenuOpen_; },\n            setSelectedIndex: function (index) { return _this.setEnhancedSelectedIndex_(index); },\n            setDisabled: function (isDisabled) {\n                _this.selectedText_.setAttribute('tabindex', isDisabled ? '-1' : '0');\n                _this.selectedText_.setAttribute('aria-disabled', isDisabled.toString());\n                if (_this.hiddenInput_) {\n                    _this.hiddenInput_.disabled = isDisabled;\n                }\n            },\n            checkValidity: function () {\n                var classList = _this.root_.classList;\n                if (classList.contains(cssClasses.REQUIRED) && !classList.contains(cssClasses.DISABLED)) {\n                    // See notes for required attribute under https://www.w3.org/TR/html52/sec-forms.html#the-select-element\n                    // TL;DR: Invalid if no index is selected, or if the first index is selected and has an empty value.\n                    return _this.selectedIndex !== -1 && (_this.selectedIndex !== 0 || Boolean(_this.value));\n                }\n                else {\n                    return true;\n                }\n            },\n            setValid: function (isValid) {\n                _this.selectedText_.setAttribute('aria-invalid', (!isValid).toString());\n                if (isValid) {\n                    _this.root_.classList.remove(cssClasses.INVALID);\n                }\n                else {\n                    _this.root_.classList.add(cssClasses.INVALID);\n                }\n            },\n        };\n        // tslint:enable:object-literal-sort-keys\n    };\n    MDCSelect.prototype.getCommonAdapterMethods_ = function () {\n        var _this = this;\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        return {\n            addClass: function (className) { return _this.root_.classList.add(className); },\n            removeClass: function (className) { return _this.root_.classList.remove(className); },\n            hasClass: function (className) { return _this.root_.classList.contains(className); },\n            setRippleCenter: function (normalizedX) { return _this.lineRipple_ && _this.lineRipple_.setRippleCenter(normalizedX); },\n            activateBottomLine: function () { return _this.lineRipple_ && _this.lineRipple_.activate(); },\n            deactivateBottomLine: function () { return _this.lineRipple_ && _this.lineRipple_.deactivate(); },\n            notifyChange: function (value) {\n                var index = _this.selectedIndex;\n                _this.emit(strings.CHANGE_EVENT, { value: value, index: index }, true /* shouldBubble  */);\n            },\n        };\n        // tslint:enable:object-literal-sort-keys\n    };\n    MDCSelect.prototype.getOutlineAdapterMethods_ = function () {\n        var _this = this;\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        return {\n            hasOutline: function () { return Boolean(_this.outline_); },\n            notchOutline: function (labelWidth) { return _this.outline_ && _this.outline_.notch(labelWidth); },\n            closeOutline: function () { return _this.outline_ && _this.outline_.closeNotch(); },\n        };\n        // tslint:enable:object-literal-sort-keys\n    };\n    MDCSelect.prototype.getLabelAdapterMethods_ = function () {\n        var _this = this;\n        return {\n            floatLabel: function (shouldFloat) { return _this.label_ && _this.label_.float(shouldFloat); },\n            getLabelWidth: function () { return _this.label_ ? _this.label_.getWidth() : 0; },\n        };\n    };\n    /**\n     * Calculates where the line ripple should start based on the x coordinate within the component.\n     */\n    MDCSelect.prototype.getNormalizedXCoordinate_ = function (evt) {\n        var targetClientRect = evt.target.getBoundingClientRect();\n        var xCoordinate = this.isTouchEvent_(evt) ? evt.touches[0].clientX : evt.clientX;\n        return xCoordinate - targetClientRect.left;\n    };\n    MDCSelect.prototype.isTouchEvent_ = function (evt) {\n        return Boolean(evt.touches);\n    };\n    /**\n     * Returns a map of all subcomponents to subfoundations.\n     */\n    MDCSelect.prototype.getFoundationMap_ = function () {\n        return {\n            helperText: this.helperText_ ? this.helperText_.foundation : undefined,\n            leadingIcon: this.leadingIcon_ ? this.leadingIcon_.foundation : undefined,\n        };\n    };\n    MDCSelect.prototype.setEnhancedSelectedIndex_ = function (index) {\n        var selectedItem = this.menu_.items[index];\n        this.selectedText_.textContent = selectedItem ? selectedItem.textContent.trim() : '';\n        var previouslySelected = this.menuElement_.querySelector(strings.SELECTED_ITEM_SELECTOR);\n        if (previouslySelected) {\n            previouslySelected.classList.remove(cssClasses.SELECTED_ITEM_CLASS);\n            previouslySelected.removeAttribute(strings.ARIA_SELECTED_ATTR);\n        }\n        if (selectedItem) {\n            selectedItem.classList.add(cssClasses.SELECTED_ITEM_CLASS);\n            selectedItem.setAttribute(strings.ARIA_SELECTED_ATTR, 'true');\n        }\n        // Synchronize hidden input's value with data-value attribute of selected item.\n        // This code path is also followed when setting value directly, so this covers all cases.\n        if (this.hiddenInput_) {\n            this.hiddenInput_.value = selectedItem ? selectedItem.getAttribute(strings.ENHANCED_VALUE_ATTR) || '' : '';\n        }\n        this.layout();\n    };\n    MDCSelect.prototype.initialSyncRequiredState_ = function () {\n        var isRequired = this.targetElement_.required\n            || this.targetElement_.getAttribute('aria-required') === 'true'\n            || this.root_.classList.contains(cssClasses.REQUIRED);\n        if (isRequired) {\n            if (this.nativeControl_) {\n                this.nativeControl_.required = true;\n            }\n            else {\n                this.selectedText_.setAttribute('aria-required', 'true');\n            }\n            this.root_.classList.add(cssClasses.REQUIRED);\n        }\n    };\n    MDCSelect.prototype.addMutationObserverForRequired_ = function () {\n        var _this = this;\n        var observerHandler = function (attributesList) {\n            attributesList.some(function (attributeName) {\n                if (VALIDATION_ATTR_WHITELIST.indexOf(attributeName) === -1) {\n                    return false;\n                }\n                if (_this.selectedText_) {\n                    if (_this.selectedText_.getAttribute('aria-required') === 'true') {\n                        _this.root_.classList.add(cssClasses.REQUIRED);\n                    }\n                    else {\n                        _this.root_.classList.remove(cssClasses.REQUIRED);\n                    }\n                }\n                else {\n                    if (_this.nativeControl_.required) {\n                        _this.root_.classList.add(cssClasses.REQUIRED);\n                    }\n                    else {\n                        _this.root_.classList.remove(cssClasses.REQUIRED);\n                    }\n                }\n                return true;\n            });\n        };\n        var getAttributesList = function (mutationsList) {\n            return mutationsList\n                .map(function (mutation) { return mutation.attributeName; })\n                .filter(function (attributeName) { return attributeName; });\n        };\n        var observer = new MutationObserver(function (mutationsList) { return observerHandler(getAttributesList(mutationsList)); });\n        observer.observe(this.targetElement_, { attributes: true });\n        this.validationObserver_ = observer;\n    };\n    return MDCSelect;\n}(MDCComponent));\nexport { MDCSelect };\n//# sourceMappingURL=component.js.map"]},"metadata":{},"sourceType":"module"}