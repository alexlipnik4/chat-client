{"ast":null,"code":"/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCRipple } from '@material/ripple/component';\nimport { MDCRippleFoundation } from '@material/ripple/foundation';\nimport { strings } from './constants';\nimport { MDCChipFoundation } from './foundation';\nvar INTERACTION_EVENTS = ['click', 'keydown'];\n\nvar MDCChip =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MDCChip, _super);\n\n  function MDCChip() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(MDCChip.prototype, \"selected\", {\n    /**\n     * @return Whether the chip is selected.\n     */\n    get: function () {\n      return this.foundation_.isSelected();\n    },\n\n    /**\n     * Sets selected state on the chip.\n     */\n    set: function (selected) {\n      this.foundation_.setSelected(selected);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCChip.prototype, \"shouldRemoveOnTrailingIconClick\", {\n    /**\n     * @return Whether a trailing icon click should trigger exit/removal of the chip.\n     */\n    get: function () {\n      return this.foundation_.getShouldRemoveOnTrailingIconClick();\n    },\n\n    /**\n     * Sets whether a trailing icon click should trigger exit/removal of the chip.\n     */\n    set: function (shouldRemove) {\n      this.foundation_.setShouldRemoveOnTrailingIconClick(shouldRemove);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCChip.prototype, \"ripple\", {\n    get: function () {\n      return this.ripple_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCChip.prototype, \"id\", {\n    get: function () {\n      return this.root_.id;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MDCChip.attachTo = function (root) {\n    return new MDCChip(root);\n  };\n\n  MDCChip.prototype.initialize = function (rippleFactory) {\n    var _this = this;\n\n    if (rippleFactory === void 0) {\n      rippleFactory = function (el, foundation) {\n        return new MDCRipple(el, foundation);\n      };\n    }\n\n    this.leadingIcon_ = this.root_.querySelector(strings.LEADING_ICON_SELECTOR);\n    this.trailingIcon_ = this.root_.querySelector(strings.TRAILING_ICON_SELECTOR);\n    this.checkmark_ = this.root_.querySelector(strings.CHECKMARK_SELECTOR); // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n\n    var rippleAdapter = tslib_1.__assign({}, MDCRipple.createAdapter(this), {\n      computeBoundingRect: function () {\n        return _this.foundation_.getDimensions();\n      }\n    });\n\n    this.ripple_ = rippleFactory(this.root_, new MDCRippleFoundation(rippleAdapter));\n  };\n\n  MDCChip.prototype.initialSyncWithDOM = function () {\n    var _this = this;\n\n    this.handleInteraction_ = function (evt) {\n      return _this.foundation_.handleInteraction(evt);\n    };\n\n    this.handleTransitionEnd_ = function (evt) {\n      return _this.foundation_.handleTransitionEnd(evt);\n    };\n\n    this.handleTrailingIconInteraction_ = function (evt) {\n      return _this.foundation_.handleTrailingIconInteraction(evt);\n    };\n\n    INTERACTION_EVENTS.forEach(function (evtType) {\n      _this.listen(evtType, _this.handleInteraction_);\n    });\n    this.listen('transitionend', this.handleTransitionEnd_);\n\n    if (this.trailingIcon_) {\n      INTERACTION_EVENTS.forEach(function (evtType) {\n        _this.trailingIcon_.addEventListener(evtType, _this.handleTrailingIconInteraction_);\n      });\n    }\n  };\n\n  MDCChip.prototype.destroy = function () {\n    var _this = this;\n\n    this.ripple_.destroy();\n    INTERACTION_EVENTS.forEach(function (evtType) {\n      _this.unlisten(evtType, _this.handleInteraction_);\n    });\n    this.unlisten('transitionend', this.handleTransitionEnd_);\n\n    if (this.trailingIcon_) {\n      INTERACTION_EVENTS.forEach(function (evtType) {\n        _this.trailingIcon_.removeEventListener(evtType, _this.handleTrailingIconInteraction_);\n      });\n    }\n\n    _super.prototype.destroy.call(this);\n  };\n  /**\n   * Begins the exit animation which leads to removal of the chip.\n   */\n\n\n  MDCChip.prototype.beginExit = function () {\n    this.foundation_.beginExit();\n  };\n\n  MDCChip.prototype.getDefaultFoundation = function () {\n    var _this = this; // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n\n\n    var adapter = {\n      addClass: function (className) {\n        return _this.root_.classList.add(className);\n      },\n      addClassToLeadingIcon: function (className) {\n        if (_this.leadingIcon_) {\n          _this.leadingIcon_.classList.add(className);\n        }\n      },\n      eventTargetHasClass: function (target, className) {\n        return target ? target.classList.contains(className) : false;\n      },\n      getCheckmarkBoundingClientRect: function () {\n        return _this.checkmark_ ? _this.checkmark_.getBoundingClientRect() : null;\n      },\n      getComputedStyleValue: function (propertyName) {\n        return window.getComputedStyle(_this.root_).getPropertyValue(propertyName);\n      },\n      getRootBoundingClientRect: function () {\n        return _this.root_.getBoundingClientRect();\n      },\n      hasClass: function (className) {\n        return _this.root_.classList.contains(className);\n      },\n      hasLeadingIcon: function () {\n        return !!_this.leadingIcon_;\n      },\n      notifyInteraction: function () {\n        return _this.emit(strings.INTERACTION_EVENT, {\n          chipId: _this.id\n        }, true\n        /* shouldBubble */\n        );\n      },\n      notifyRemoval: function () {\n        return _this.emit(strings.REMOVAL_EVENT, {\n          chipId: _this.id,\n          root: _this.root_\n        }, true\n        /* shouldBubble */\n        );\n      },\n      notifySelection: function (selected) {\n        return _this.emit(strings.SELECTION_EVENT, {\n          chipId: _this.id,\n          selected: selected\n        }, true\n        /* shouldBubble */\n        );\n      },\n      notifyTrailingIconInteraction: function () {\n        return _this.emit(strings.TRAILING_ICON_INTERACTION_EVENT, {\n          chipId: _this.id\n        }, true\n        /* shouldBubble */\n        );\n      },\n      removeClass: function (className) {\n        return _this.root_.classList.remove(className);\n      },\n      removeClassFromLeadingIcon: function (className) {\n        if (_this.leadingIcon_) {\n          _this.leadingIcon_.classList.remove(className);\n        }\n      },\n      setAttr: function (attr, value) {\n        return _this.root_.setAttribute(attr, value);\n      },\n      setStyleProperty: function (propertyName, value) {\n        return _this.root_.style.setProperty(propertyName, value);\n      }\n    };\n    return new MDCChipFoundation(adapter);\n  };\n\n  return MDCChip;\n}(MDCComponent);\n\nexport { MDCChip };","map":{"version":3,"sources":["component.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCRipple } from '@material/ripple/component';\nimport { MDCRippleFoundation } from '@material/ripple/foundation';\nimport { strings } from './constants';\nimport { MDCChipFoundation } from './foundation';\nvar INTERACTION_EVENTS = ['click', 'keydown'];\nvar MDCChip = /** @class */ (function (_super) {\n    tslib_1.__extends(MDCChip, _super);\n    function MDCChip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MDCChip.prototype, \"selected\", {\n        /**\n         * @return Whether the chip is selected.\n         */\n        get: function () {\n            return this.foundation_.isSelected();\n        },\n        /**\n         * Sets selected state on the chip.\n         */\n        set: function (selected) {\n            this.foundation_.setSelected(selected);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCChip.prototype, \"shouldRemoveOnTrailingIconClick\", {\n        /**\n         * @return Whether a trailing icon click should trigger exit/removal of the chip.\n         */\n        get: function () {\n            return this.foundation_.getShouldRemoveOnTrailingIconClick();\n        },\n        /**\n         * Sets whether a trailing icon click should trigger exit/removal of the chip.\n         */\n        set: function (shouldRemove) {\n            this.foundation_.setShouldRemoveOnTrailingIconClick(shouldRemove);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCChip.prototype, \"ripple\", {\n        get: function () {\n            return this.ripple_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCChip.prototype, \"id\", {\n        get: function () {\n            return this.root_.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCChip.attachTo = function (root) {\n        return new MDCChip(root);\n    };\n    MDCChip.prototype.initialize = function (rippleFactory) {\n        var _this = this;\n        if (rippleFactory === void 0) { rippleFactory = function (el, foundation) { return new MDCRipple(el, foundation); }; }\n        this.leadingIcon_ = this.root_.querySelector(strings.LEADING_ICON_SELECTOR);\n        this.trailingIcon_ = this.root_.querySelector(strings.TRAILING_ICON_SELECTOR);\n        this.checkmark_ = this.root_.querySelector(strings.CHECKMARK_SELECTOR);\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var rippleAdapter = tslib_1.__assign({}, MDCRipple.createAdapter(this), { computeBoundingRect: function () { return _this.foundation_.getDimensions(); } });\n        this.ripple_ = rippleFactory(this.root_, new MDCRippleFoundation(rippleAdapter));\n    };\n    MDCChip.prototype.initialSyncWithDOM = function () {\n        var _this = this;\n        this.handleInteraction_ = function (evt) { return _this.foundation_.handleInteraction(evt); };\n        this.handleTransitionEnd_ = function (evt) { return _this.foundation_.handleTransitionEnd(evt); };\n        this.handleTrailingIconInteraction_ = function (evt) {\n            return _this.foundation_.handleTrailingIconInteraction(evt);\n        };\n        INTERACTION_EVENTS.forEach(function (evtType) {\n            _this.listen(evtType, _this.handleInteraction_);\n        });\n        this.listen('transitionend', this.handleTransitionEnd_);\n        if (this.trailingIcon_) {\n            INTERACTION_EVENTS.forEach(function (evtType) {\n                _this.trailingIcon_.addEventListener(evtType, _this.handleTrailingIconInteraction_);\n            });\n        }\n    };\n    MDCChip.prototype.destroy = function () {\n        var _this = this;\n        this.ripple_.destroy();\n        INTERACTION_EVENTS.forEach(function (evtType) {\n            _this.unlisten(evtType, _this.handleInteraction_);\n        });\n        this.unlisten('transitionend', this.handleTransitionEnd_);\n        if (this.trailingIcon_) {\n            INTERACTION_EVENTS.forEach(function (evtType) {\n                _this.trailingIcon_.removeEventListener(evtType, _this.handleTrailingIconInteraction_);\n            });\n        }\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Begins the exit animation which leads to removal of the chip.\n     */\n    MDCChip.prototype.beginExit = function () {\n        this.foundation_.beginExit();\n    };\n    MDCChip.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            addClass: function (className) { return _this.root_.classList.add(className); },\n            addClassToLeadingIcon: function (className) {\n                if (_this.leadingIcon_) {\n                    _this.leadingIcon_.classList.add(className);\n                }\n            },\n            eventTargetHasClass: function (target, className) { return target ? target.classList.contains(className) : false; },\n            getCheckmarkBoundingClientRect: function () { return _this.checkmark_ ? _this.checkmark_.getBoundingClientRect() : null; },\n            getComputedStyleValue: function (propertyName) { return window.getComputedStyle(_this.root_).getPropertyValue(propertyName); },\n            getRootBoundingClientRect: function () { return _this.root_.getBoundingClientRect(); },\n            hasClass: function (className) { return _this.root_.classList.contains(className); },\n            hasLeadingIcon: function () { return !!_this.leadingIcon_; },\n            notifyInteraction: function () { return _this.emit(strings.INTERACTION_EVENT, { chipId: _this.id }, true /* shouldBubble */); },\n            notifyRemoval: function () { return _this.emit(strings.REMOVAL_EVENT, { chipId: _this.id, root: _this.root_ }, true /* shouldBubble */); },\n            notifySelection: function (selected) { return _this.emit(strings.SELECTION_EVENT, { chipId: _this.id, selected: selected }, true /* shouldBubble */); },\n            notifyTrailingIconInteraction: function () { return _this.emit(strings.TRAILING_ICON_INTERACTION_EVENT, { chipId: _this.id }, true /* shouldBubble */); },\n            removeClass: function (className) { return _this.root_.classList.remove(className); },\n            removeClassFromLeadingIcon: function (className) {\n                if (_this.leadingIcon_) {\n                    _this.leadingIcon_.classList.remove(className);\n                }\n            },\n            setAttr: function (attr, value) { return _this.root_.setAttribute(attr, value); },\n            setStyleProperty: function (propertyName, value) { return _this.root_.style.setProperty(propertyName, value); },\n        };\n        return new MDCChipFoundation(adapter);\n    };\n    return MDCChip;\n}(MDCComponent));\nexport { MDCChip };\n//# sourceMappingURL=component.js.map"]},"metadata":{},"sourceType":"module"}