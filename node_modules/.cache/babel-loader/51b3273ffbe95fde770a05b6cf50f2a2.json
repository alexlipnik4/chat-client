{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { componentFactory, deprecationWarning } from '@rmwc/base';\nimport { withRipple } from '@rmwc/ripple';\nimport { Button } from '@rmwc/button';\nimport { IconButton } from '@rmwc/icon-button';\n/** A Card Component */\n\nexport var Card = componentFactory({\n  displayName: 'Card',\n  classNames: function (props) {\n    return ['mdc-card', {\n      'mdc-card--outlined': props.outlined\n    }];\n  },\n  consumeProps: ['outlined']\n});\n/** Media area that displays a custom background-image with background-size: cover */\n\nexport var CardMedia = componentFactory({\n  displayName: 'CardMedia',\n  tag: 'section',\n  classNames: function (props) {\n    return ['mdc-card__media', {\n      'mdc-card__media--square': props.square,\n      'mdc-card__media--16-9': props.sixteenByNine\n    }];\n  },\n  consumeProps: ['square', 'sixteenByNine']\n});\n/** An absolutely-positioned box the same size as the media area, for displaying a title or icon on top of the background-image */\n\nexport var CardMediaContent = componentFactory({\n  displayName: 'CardMediaContent',\n  classNames: ['mdc-card__media-content']\n});\n/** The main clickable area for the primary content of the card */\n\nexport var CardPrimaryAction = withRipple({\n  surface: false\n})(componentFactory({\n  displayName: 'CardPrimaryAction',\n  classNames: ['mdc-card__primary-action']\n}));\n/** Row containing action buttons and/or icons */\n\nexport var CardActions = componentFactory({\n  displayName: 'CardActions',\n  tag: 'section',\n  classNames: function (props) {\n    return ['mdc-card__actions', {\n      'mdc-card__actions--full-bleed': props.fullBleed\n    }];\n  },\n  consumeProps: ['fullBleed']\n});\n/** A group of action buttons, displayed on the left side of the card (in LTR), adjacent to CardActionIcons */\n\nexport var CardActionButtons = componentFactory({\n  displayName: 'CardActionButtons',\n  classNames: ['mdc-card__action-buttons']\n});\n/** A group of supplemental action icons, displayed on the right side of the card (in LTR), adjacent to CardActionButtons */\n\nexport var CardActionIcons = componentFactory({\n  displayName: 'CardActionIcons',\n  classNames: ['mdc-card__action-icons']\n});\n/** A card action Icon */\n\nexport var CardActionIcon = componentFactory({\n  displayName: 'CardActionIcon',\n  tag: IconButton,\n  classNames: ['mdc-card__action', 'mdc-card__action--icon']\n});\n/** A card action Button */\n\nexport var CardActionButton = componentFactory({\n  displayName: 'CardActionButton',\n  tag: Button,\n  classNames: ['mdc-card__action', 'mdc-card__action--button']\n});\n/** DEPRECATED: A Card action Button. Depending on the props that are passed, this will either render an instance of the Button component, or the IconButton component. */\n\nexport var CardAction = function (props) {\n  /* istanbul ignore next */\n  deprecationWarning('The CardAction component has been removed in favor of CardActionIcon and CardActionButton due to impossible type intersections of IconButtonProps and ButtonProps');\n  return props.icon ? // @ts-ignore\n  React.createElement(CardActionIcon, __assign({}, props)) : React.createElement(CardActionButton, __assign({}, props));\n};\nCardAction.displayName = 'CardAction';","map":{"version":3,"sources":["/Users/alexlipnik/Documents/ec2/basic-store/node_modules/@rmwc/card/next/index.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","componentFactory","deprecationWarning","withRipple","Button","IconButton","Card","displayName","classNames","props","outlined","consumeProps","CardMedia","tag","square","sixteenByNine","CardMediaContent","CardPrimaryAction","surface","CardActions","fullBleed","CardActionButtons","CardActionIcons","CardActionIcon","CardActionButton","CardAction","icon","createElement"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,OAAO,KAAKO,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,EAA2BC,kBAA3B,QAAqD,YAArD;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA;;AACA,OAAO,IAAIC,IAAI,GAAGL,gBAAgB,CAAC;AAC/BM,EAAAA,WAAW,EAAE,MADkB;AAE/BC,EAAAA,UAAU,EAAE,UAAUC,KAAV,EAAiB;AAAE,WAAO,CAClC,UADkC,EAElC;AACI,4BAAsBA,KAAK,CAACC;AADhC,KAFkC,CAAP;AAK3B,GAP2B;AAQ/BC,EAAAA,YAAY,EAAE,CAAC,UAAD;AARiB,CAAD,CAA3B;AAUP;;AACA,OAAO,IAAIC,SAAS,GAAGX,gBAAgB,CAAC;AACpCM,EAAAA,WAAW,EAAE,WADuB;AAEpCM,EAAAA,GAAG,EAAE,SAF+B;AAGpCL,EAAAA,UAAU,EAAE,UAAUC,KAAV,EAAiB;AAAE,WAAO,CAClC,iBADkC,EAElC;AACI,iCAA2BA,KAAK,CAACK,MADrC;AAEI,+BAAyBL,KAAK,CAACM;AAFnC,KAFkC,CAAP;AAM3B,GATgC;AAUpCJ,EAAAA,YAAY,EAAE,CAAC,QAAD,EAAW,eAAX;AAVsB,CAAD,CAAhC;AAYP;;AACA,OAAO,IAAIK,gBAAgB,GAAGf,gBAAgB,CAAC;AAC3CM,EAAAA,WAAW,EAAE,kBAD8B;AAE3CC,EAAAA,UAAU,EAAE,CAAC,yBAAD;AAF+B,CAAD,CAAvC;AAIP;;AACA,OAAO,IAAIS,iBAAiB,GAAGd,UAAU,CAAC;AACtCe,EAAAA,OAAO,EAAE;AAD6B,CAAD,CAAV,CAE5BjB,gBAAgB,CAAC;AAChBM,EAAAA,WAAW,EAAE,mBADG;AAEhBC,EAAAA,UAAU,EAAE,CAAC,0BAAD;AAFI,CAAD,CAFY,CAAxB;AAMP;;AACA,OAAO,IAAIW,WAAW,GAAGlB,gBAAgB,CAAC;AACtCM,EAAAA,WAAW,EAAE,aADyB;AAEtCM,EAAAA,GAAG,EAAE,SAFiC;AAGtCL,EAAAA,UAAU,EAAE,UAAUC,KAAV,EAAiB;AAAE,WAAO,CAClC,mBADkC,EAElC;AAAE,uCAAiCA,KAAK,CAACW;AAAzC,KAFkC,CAAP;AAG3B,GANkC;AAOtCT,EAAAA,YAAY,EAAE,CAAC,WAAD;AAPwB,CAAD,CAAlC;AASP;;AACA,OAAO,IAAIU,iBAAiB,GAAGpB,gBAAgB,CAAC;AAC5CM,EAAAA,WAAW,EAAE,mBAD+B;AAE5CC,EAAAA,UAAU,EAAE,CAAC,0BAAD;AAFgC,CAAD,CAAxC;AAIP;;AACA,OAAO,IAAIc,eAAe,GAAGrB,gBAAgB,CAAC;AAC1CM,EAAAA,WAAW,EAAE,iBAD6B;AAE1CC,EAAAA,UAAU,EAAE,CAAC,wBAAD;AAF8B,CAAD,CAAtC;AAIP;;AACA,OAAO,IAAIe,cAAc,GAAGtB,gBAAgB,CAAC;AACzCM,EAAAA,WAAW,EAAE,gBAD4B;AAEzCM,EAAAA,GAAG,EAAER,UAFoC;AAGzCG,EAAAA,UAAU,EAAE,CAAC,kBAAD,EAAqB,wBAArB;AAH6B,CAAD,CAArC;AAKP;;AACA,OAAO,IAAIgB,gBAAgB,GAAGvB,gBAAgB,CAAC;AAC3CM,EAAAA,WAAW,EAAE,kBAD8B;AAE3CM,EAAAA,GAAG,EAAET,MAFsC;AAG3CI,EAAAA,UAAU,EAAE,CAAC,kBAAD,EAAqB,0BAArB;AAH+B,CAAD,CAAvC;AAKP;;AACA,OAAO,IAAIiB,UAAU,GAAG,UAAUhB,KAAV,EAAiB;AACrC;AACAP,EAAAA,kBAAkB,CAAC,mKAAD,CAAlB;AACA,SAAOO,KAAK,CAACiB,IAAN,GACP;AACA1B,EAAAA,KAAK,CAAC2B,aAAN,CAAoBJ,cAApB,EAAoCrC,QAAQ,CAAC,EAAD,EAAKuB,KAAL,CAA5C,CAFO,GAEsDT,KAAK,CAAC2B,aAAN,CAAoBH,gBAApB,EAAsCtC,QAAQ,CAAC,EAAD,EAAKuB,KAAL,CAA9C,CAF7D;AAGH,CANM;AAOPgB,UAAU,CAAClB,WAAX,GAAyB,YAAzB","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { componentFactory, deprecationWarning } from '@rmwc/base';\nimport { withRipple } from '@rmwc/ripple';\nimport { Button } from '@rmwc/button';\nimport { IconButton } from '@rmwc/icon-button';\n/** A Card Component */\nexport var Card = componentFactory({\n    displayName: 'Card',\n    classNames: function (props) { return [\n        'mdc-card',\n        {\n            'mdc-card--outlined': props.outlined\n        }\n    ]; },\n    consumeProps: ['outlined']\n});\n/** Media area that displays a custom background-image with background-size: cover */\nexport var CardMedia = componentFactory({\n    displayName: 'CardMedia',\n    tag: 'section',\n    classNames: function (props) { return [\n        'mdc-card__media',\n        {\n            'mdc-card__media--square': props.square,\n            'mdc-card__media--16-9': props.sixteenByNine\n        }\n    ]; },\n    consumeProps: ['square', 'sixteenByNine']\n});\n/** An absolutely-positioned box the same size as the media area, for displaying a title or icon on top of the background-image */\nexport var CardMediaContent = componentFactory({\n    displayName: 'CardMediaContent',\n    classNames: ['mdc-card__media-content']\n});\n/** The main clickable area for the primary content of the card */\nexport var CardPrimaryAction = withRipple({\n    surface: false\n})(componentFactory({\n    displayName: 'CardPrimaryAction',\n    classNames: ['mdc-card__primary-action']\n}));\n/** Row containing action buttons and/or icons */\nexport var CardActions = componentFactory({\n    displayName: 'CardActions',\n    tag: 'section',\n    classNames: function (props) { return [\n        'mdc-card__actions',\n        { 'mdc-card__actions--full-bleed': props.fullBleed }\n    ]; },\n    consumeProps: ['fullBleed']\n});\n/** A group of action buttons, displayed on the left side of the card (in LTR), adjacent to CardActionIcons */\nexport var CardActionButtons = componentFactory({\n    displayName: 'CardActionButtons',\n    classNames: ['mdc-card__action-buttons']\n});\n/** A group of supplemental action icons, displayed on the right side of the card (in LTR), adjacent to CardActionButtons */\nexport var CardActionIcons = componentFactory({\n    displayName: 'CardActionIcons',\n    classNames: ['mdc-card__action-icons']\n});\n/** A card action Icon */\nexport var CardActionIcon = componentFactory({\n    displayName: 'CardActionIcon',\n    tag: IconButton,\n    classNames: ['mdc-card__action', 'mdc-card__action--icon']\n});\n/** A card action Button */\nexport var CardActionButton = componentFactory({\n    displayName: 'CardActionButton',\n    tag: Button,\n    classNames: ['mdc-card__action', 'mdc-card__action--button']\n});\n/** DEPRECATED: A Card action Button. Depending on the props that are passed, this will either render an instance of the Button component, or the IconButton component. */\nexport var CardAction = function (props) {\n    /* istanbul ignore next */\n    deprecationWarning('The CardAction component has been removed in favor of CardActionIcon and CardActionButton due to impossible type intersections of IconButtonProps and ButtonProps');\n    return props.icon ? (\n    // @ts-ignore\n    React.createElement(CardActionIcon, __assign({}, props))) : (React.createElement(CardActionButton, __assign({}, props)));\n};\nCardAction.displayName = 'CardAction';\n"]},"metadata":{},"sourceType":"module"}