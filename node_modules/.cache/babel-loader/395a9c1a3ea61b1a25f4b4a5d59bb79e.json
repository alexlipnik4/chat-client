{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, strings } from './constants';\n\nvar MDCSwitchFoundation =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MDCSwitchFoundation, _super);\n\n  function MDCSwitchFoundation(adapter) {\n    return _super.call(this, tslib_1.__assign({}, MDCSwitchFoundation.defaultAdapter, adapter)) || this;\n  }\n\n  Object.defineProperty(MDCSwitchFoundation, \"strings\", {\n    /** The string constants used by the switch. */\n    get: function () {\n      return strings;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCSwitchFoundation, \"cssClasses\", {\n    /** The CSS classes used by the switch. */\n    get: function () {\n      return cssClasses;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCSwitchFoundation, \"defaultAdapter\", {\n    /** The default Adapter for the switch. */\n    get: function () {\n      return {\n        addClass: function () {\n          return undefined;\n        },\n        removeClass: function () {\n          return undefined;\n        },\n        setNativeControlChecked: function () {\n          return undefined;\n        },\n        setNativeControlDisabled: function () {\n          return undefined;\n        }\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /** Sets the checked state of the switch. */\n\n  MDCSwitchFoundation.prototype.setChecked = function (checked) {\n    this.adapter_.setNativeControlChecked(checked);\n    this.updateCheckedStyling_(checked);\n  };\n  /** Sets the disabled state of the switch. */\n\n\n  MDCSwitchFoundation.prototype.setDisabled = function (disabled) {\n    this.adapter_.setNativeControlDisabled(disabled);\n\n    if (disabled) {\n      this.adapter_.addClass(cssClasses.DISABLED);\n    } else {\n      this.adapter_.removeClass(cssClasses.DISABLED);\n    }\n  };\n  /** Handles the change event for the switch native control. */\n\n\n  MDCSwitchFoundation.prototype.handleChange = function (evt) {\n    var nativeControl = evt.target;\n    this.updateCheckedStyling_(nativeControl.checked);\n  };\n  /** Updates the styling of the switch based on its checked state. */\n\n\n  MDCSwitchFoundation.prototype.updateCheckedStyling_ = function (checked) {\n    if (checked) {\n      this.adapter_.addClass(cssClasses.CHECKED);\n    } else {\n      this.adapter_.removeClass(cssClasses.CHECKED);\n    }\n  };\n\n  return MDCSwitchFoundation;\n}(MDCFoundation);\n\nexport { MDCSwitchFoundation }; // tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\n\nexport default MDCSwitchFoundation;","map":{"version":3,"sources":["foundation.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAQ,aAAR,QAA4B,2BAA5B;AAEA,SAAQ,UAAR,EAAoB,OAApB,QAAkC,aAAlC;;AAEA,IAAA,mBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyC,EAAA,OAAA,CAAA,SAAA,CAAA,mBAAA,EAAA,MAAA;;AAqBvC,WAAA,mBAAA,CAAY,OAAZ,EAA+C;WAC7C,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,OAAA,CAAA,QAAA,CAAA,EAAA,EAAU,mBAAmB,CAAC,cAA9B,EAAiD,OAAjD,CAAA,KAA0D,I;AAC3D;;AArBD,EAAA,MAAA,CAAA,cAAA,CAAW,mBAAX,EAAW,SAAX,EAAkB;AADlB;SACA,YAAA;AACE,aAAO,OAAP;AACD,KAFiB;oBAAA;;AAAA,GAAlB;AAKA,EAAA,MAAA,CAAA,cAAA,CAAW,mBAAX,EAAW,YAAX,EAAqB;AADrB;SACA,YAAA;AACE,aAAO,UAAP;AACD,KAFoB;oBAAA;;AAAA,GAArB;AAKA,EAAA,MAAA,CAAA,cAAA,CAAW,mBAAX,EAAW,gBAAX,EAAyB;AADzB;SACA,YAAA;AACE,aAAO;AACL,QAAA,QAAQ,EAAE,YAAA;AAAM,iBAAA,SAAA;AAAS,SADpB;AAEL,QAAA,WAAW,EAAE,YAAA;AAAM,iBAAA,SAAA;AAAS,SAFvB;AAGL,QAAA,uBAAuB,EAAE,YAAA;AAAM,iBAAA,SAAA;AAAS,SAHnC;AAIL,QAAA,wBAAwB,EAAE,YAAA;AAAM,iBAAA,SAAA;AAAS;AAJpC,OAAP;AAMD,KAPwB;oBAAA;;AAAA,GAAzB;AAaA;;AACA,EAAA,mBAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,OAAX,EAA2B;AACzB,SAAK,QAAL,CAAc,uBAAd,CAAsC,OAAtC;AACA,SAAK,qBAAL,CAA2B,OAA3B;AACD,GAHD;AAKA;;;AACA,EAAA,mBAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAY,QAAZ,EAA6B;AAC3B,SAAK,QAAL,CAAc,wBAAd,CAAuC,QAAvC;;AACA,QAAI,QAAJ,EAAc;AACZ,WAAK,QAAL,CAAc,QAAd,CAAuB,UAAU,CAAC,QAAlC;AACD,KAFD,MAEO;AACL,WAAK,QAAL,CAAc,WAAd,CAA0B,UAAU,CAAC,QAArC;AACD;AACF,GAPD;AASA;;;AACA,EAAA,mBAAA,CAAA,SAAA,CAAA,YAAA,GAAA,UAAa,GAAb,EAAuB;AACrB,QAAM,aAAa,GAAG,GAAG,CAAC,MAA1B;AACA,SAAK,qBAAL,CAA2B,aAAa,CAAC,OAAzC;AACD,GAHD;AAKA;;;AACQ,EAAA,mBAAA,CAAA,SAAA,CAAA,qBAAA,GAAR,UAA8B,OAA9B,EAA8C;AAC5C,QAAI,OAAJ,EAAa;AACX,WAAK,QAAL,CAAc,QAAd,CAAuB,UAAU,CAAC,OAAlC;AACD,KAFD,MAEO;AACL,WAAK,QAAL,CAAc,WAAd,CAA0B,UAAU,CAAC,OAArC;AACD;AACF,GANO;;AAOV,SAAA,mBAAA;AAAC,CAvDD,CAAyC,aAAzC,CAAA;;gCAyDA;;AACA,eAAe,mBAAf","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, strings } from './constants';\nvar MDCSwitchFoundation = /** @class */ (function (_super) {\n    tslib_1.__extends(MDCSwitchFoundation, _super);\n    function MDCSwitchFoundation(adapter) {\n        return _super.call(this, tslib_1.__assign({}, MDCSwitchFoundation.defaultAdapter, adapter)) || this;\n    }\n    Object.defineProperty(MDCSwitchFoundation, \"strings\", {\n        /** The string constants used by the switch. */\n        get: function () {\n            return strings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSwitchFoundation, \"cssClasses\", {\n        /** The CSS classes used by the switch. */\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSwitchFoundation, \"defaultAdapter\", {\n        /** The default Adapter for the switch. */\n        get: function () {\n            return {\n                addClass: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                setNativeControlChecked: function () { return undefined; },\n                setNativeControlDisabled: function () { return undefined; },\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Sets the checked state of the switch. */\n    MDCSwitchFoundation.prototype.setChecked = function (checked) {\n        this.adapter_.setNativeControlChecked(checked);\n        this.updateCheckedStyling_(checked);\n    };\n    /** Sets the disabled state of the switch. */\n    MDCSwitchFoundation.prototype.setDisabled = function (disabled) {\n        this.adapter_.setNativeControlDisabled(disabled);\n        if (disabled) {\n            this.adapter_.addClass(cssClasses.DISABLED);\n        }\n        else {\n            this.adapter_.removeClass(cssClasses.DISABLED);\n        }\n    };\n    /** Handles the change event for the switch native control. */\n    MDCSwitchFoundation.prototype.handleChange = function (evt) {\n        var nativeControl = evt.target;\n        this.updateCheckedStyling_(nativeControl.checked);\n    };\n    /** Updates the styling of the switch based on its checked state. */\n    MDCSwitchFoundation.prototype.updateCheckedStyling_ = function (checked) {\n        if (checked) {\n            this.adapter_.addClass(cssClasses.CHECKED);\n        }\n        else {\n            this.adapter_.removeClass(cssClasses.CHECKED);\n        }\n    };\n    return MDCSwitchFoundation;\n}(MDCFoundation));\nexport { MDCSwitchFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCSwitchFoundation;\n//# sourceMappingURL=foundation.js.map"]},"metadata":{},"sourceType":"module"}