{"ast":null,"code":"var _jsxFileName = \"/Users/alexlipnik/Documents/ec2/basic-store/src/app/components/pages/Register/Register.controller.tsx\";\nimport React, { useState, useRef } from 'react';\nimport AuthService from '../../../common/services/AuthService';\nimport Register from './Register';\n\nconst RegisterController = props => {\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\",\n    role: \"\"\n  });\n  const [message, setMessage] = useState(null);\n  let timeID = useRef(null);\n\n  const onChange = e => {\n    const target = e.target;\n    setUser({ ...user,\n      [target.name]: target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    AuthService.register(user).then(data => {\n      const {\n        message\n      } = data;\n      setMessage(message);\n      resetForm();\n\n      if (!message.msgError) {\n        timeID = setTimeout(() => {\n          props.history.push('/login');\n        }, 2000);\n      }\n    });\n  };\n\n  const resetForm = () => {\n    setUser({\n      username: \"\",\n      password: \"\",\n      role: \"\"\n    });\n  };\n\n  return React.createElement(Register, {\n    onSubmit: onSubmit,\n    onChange: onChange,\n    message: message,\n    resetForm: resetForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  });\n};\n\nexport default RegisterController;","map":{"version":3,"sources":["/Users/alexlipnik/Documents/ec2/basic-store/src/app/components/pages/Register/Register.controller.tsx"],"names":["React","useState","useRef","AuthService","Register","RegisterController","props","user","setUser","username","password","role","message","setMessage","timeID","onChange","e","target","name","value","onSubmit","preventDefault","register","then","data","resetForm","msgError","setTimeout","history","push"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAqCC,MAArC,QAAkD,OAAlD;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AAEA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAgB;AACvC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC;AAACQ,IAAAA,QAAQ,EAAE,EAAX;AAAeC,IAAAA,QAAQ,EAAE,EAAzB;AAA6BC,IAAAA,IAAI,EAAE;AAAnC,GAAD,CAAhC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,MAAIa,MAAW,GAAGZ,MAAM,CAAC,IAAD,CAAxB;;AAEA,QAAMa,QAAQ,GAAIC,CAAD,IAA0C;AACvD,UAAMC,MAAM,GAAGD,CAAC,CAACC,MAAjB;AAEAT,IAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAU,OAACU,MAAM,CAACC,IAAR,GAAgBD,MAAM,CAACE;AAAjC,KAAD,CAAP;AACH,GAJD;;AAMA,QAAMC,QAAQ,GAAIJ,CAAD,IAAyC;AACtDA,IAAAA,CAAC,CAACK,cAAF;AACAlB,IAAAA,WAAW,CAACmB,QAAZ,CAAqBf,IAArB,EAA2BgB,IAA3B,CAAgCC,IAAI,IAAI;AACpC,YAAM;AAACZ,QAAAA;AAAD,UAAYY,IAAlB;AACAX,MAAAA,UAAU,CAACD,OAAD,CAAV;AACAa,MAAAA,SAAS;;AACT,UAAG,CAACb,OAAO,CAACc,QAAZ,EAAqB;AACjBZ,QAAAA,MAAM,GAAGa,UAAU,CAAC,MAAM;AACtBrB,UAAAA,KAAK,CAACsB,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACH,SAFkB,EAEhB,IAFgB,CAAnB;AAGH;AACJ,KATD;AAUH,GAZD;;AAcA,QAAMJ,SAAS,GAAG,MAAM;AACpBjB,IAAAA,OAAO,CAAC;AAACC,MAAAA,QAAQ,EAAE,EAAX;AAAeC,MAAAA,QAAQ,EAAE,EAAzB;AAA6BC,MAAAA,IAAI,EAAE;AAAnC,KAAD,CAAP;AACH,GAFD;;AAIA,SACI,oBAAC,QAAD;AACI,IAAA,QAAQ,EAAES,QADd;AAEI,IAAA,QAAQ,EAAEL,QAFd;AAGI,IAAA,OAAO,EAAEH,OAHb;AAII,IAAA,SAAS,EAAEa,SAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AASH,CAtCD;;AAwCA,eAAepB,kBAAf","sourcesContent":["import React, {useState, useContext, useRef} from 'react';\nimport AuthService from '../../../common/services/AuthService';\nimport {AuthContext} from '../../../common/context/AuthContext';\nimport Register from './Register';\n\nconst RegisterController = (props: any) => {\n    const [user, setUser] = useState({username: \"\", password: \"\", role: \"\"});\n    const [message, setMessage] = useState(null);\n    let timeID: any = useRef(null);\n\n    const onChange = (e: React.FormEvent<HTMLInputElement>) => {\n        const target = e.target as HTMLTextAreaElement;\n\n        setUser({...user, [target.name] : target.value})\n    }\n\n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        AuthService.register(user).then(data => {\n            const {message} = data;\n            setMessage(message);\n            resetForm();\n            if(!message.msgError){\n                timeID = setTimeout(() => {\n                    props.history.push('/login');\n                }, 2000);\n            }\n        })\n    }\n\n    const resetForm = () => {\n        setUser({username: \"\", password: \"\", role: \"\"})\n    }\n\n    return (\n        <Register \n            onSubmit={onSubmit}\n            onChange={onChange}\n            message={message}\n            resetForm={resetForm}\n        />\n    )\n    \n}\n\nexport default RegisterController;"]},"metadata":{},"sourceType":"module"}