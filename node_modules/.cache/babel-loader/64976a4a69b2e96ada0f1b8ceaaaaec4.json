{"ast":null,"code":"var _jsxFileName = \"/Users/alexlipnik/Documents/ec2/basic-store/src/app/components/pages/Login/Login.controller.tsx\";\nimport React, { useState, useContext } from 'react';\nimport AuthService from '../../../common/services/AuthService';\nimport { AuthContext } from '../../../common/context/AuthContext';\nimport Login from './Login';\n\nconst LoginController = props => {\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [message, setMessage] = useState(null);\n  const authContext = useContext(AuthContext);\n\n  const onChange = e => {\n    const target = e.target;\n    setUser({ ...user,\n      [target.name]: target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    AuthService.login(user).then(data => {\n      const {\n        isAuthenticated,\n        user,\n        message\n      } = data;\n\n      if (isAuthenticated) {\n        authContext.setUser(user);\n        authContext.setIsAuthenticated(isAuthenticated);\n        props.history.push('/todos');\n      } else {\n        setMessage(message);\n      }\n    });\n  };\n\n  return React.createElement(Login, {\n    onSubmit: onSubmit,\n    onChange: onChange,\n    message: message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  });\n};\n\nexport default LoginController;","map":{"version":3,"sources":["/Users/alexlipnik/Documents/ec2/basic-store/src/app/components/pages/Login/Login.controller.tsx"],"names":["React","useState","useContext","AuthService","AuthContext","Login","LoginController","props","user","setUser","username","password","message","setMessage","authContext","onChange","e","target","name","value","onSubmit","preventDefault","login","then","data","isAuthenticated","setIsAuthenticated","history","push"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,SAAQC,WAAR,QAA0B,qCAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAgB;AACpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC;AAACS,IAAAA,QAAQ,EAAE,EAAX;AAAeC,IAAAA,QAAQ,EAAE;AAAzB,GAAD,CAAhC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMa,WAAgB,GAAGZ,UAAU,CAACE,WAAD,CAAnC;;AAEA,QAAMW,QAAQ,GAAIC,CAAD,IAA0C;AACvD,UAAMC,MAAM,GAAGD,CAAC,CAACC,MAAjB;AAEAR,IAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAU,OAACS,MAAM,CAACC,IAAR,GAAgBD,MAAM,CAACE;AAAjC,KAAD,CAAP;AACH,GAJD;;AAMA,QAAMC,QAAQ,GAAIJ,CAAD,IAAyC;AACtDA,IAAAA,CAAC,CAACK,cAAF;AACAlB,IAAAA,WAAW,CAACmB,KAAZ,CAAkBd,IAAlB,EAAwBe,IAAxB,CAA6BC,IAAI,IAAI;AACjC,YAAM;AAAEC,QAAAA,eAAF;AAAmBjB,QAAAA,IAAnB;AAAyBI,QAAAA;AAAzB,UAAqCY,IAA3C;;AAEA,UAAGC,eAAH,EAAoB;AAChBX,QAAAA,WAAW,CAACL,OAAZ,CAAoBD,IAApB;AACAM,QAAAA,WAAW,CAACY,kBAAZ,CAA+BD,eAA/B;AACAlB,QAAAA,KAAK,CAACoB,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACH,OAJD,MAKK;AACDf,QAAAA,UAAU,CAACD,OAAD,CAAV;AACH;AACJ,KAXD;AAYH,GAdD;;AAgBA,SACI,oBAAC,KAAD;AACI,IAAA,QAAQ,EAAEQ,QADd;AAEI,IAAA,QAAQ,EAAEL,QAFd;AAGI,IAAA,OAAO,EAAEH,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAQH,CAnCD;;AAqCA,eAAeN,eAAf","sourcesContent":["import React, {useState, useContext} from 'react';\nimport AuthService from '../../../common/services/AuthService';\nimport {AuthContext} from '../../../common/context/AuthContext';\nimport Login from './Login';\n\nconst LoginController = (props: any) => {\n    const [user, setUser] = useState({username: \"\", password: \"\"});\n    const [message, setMessage] = useState(null);\n    const authContext: any = useContext(AuthContext);\n\n    const onChange = (e: React.FormEvent<HTMLInputElement>) => {\n        const target = e.target as HTMLTextAreaElement;\n\n        setUser({...user, [target.name] : target.value})\n    }\n\n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        AuthService.login(user).then(data => {\n            const { isAuthenticated, user, message } = data;\n            \n            if(isAuthenticated) {\n                authContext.setUser(user);\n                authContext.setIsAuthenticated(isAuthenticated);\n                props.history.push('/todos');\n            }\n            else {\n                setMessage(message);\n            }\n        })\n    }\n\n    return (\n        <Login \n            onSubmit={onSubmit}\n            onChange={onChange}\n            message={message}\n        />\n    )\n    \n}\n\nexport default LoginController;"]},"metadata":{},"sourceType":"module"}