{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCLinearProgressFoundation } from './foundation';\n\nvar MDCLinearProgress =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MDCLinearProgress, _super);\n\n  function MDCLinearProgress() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MDCLinearProgress.attachTo = function (root) {\n    return new MDCLinearProgress(root);\n  };\n\n  Object.defineProperty(MDCLinearProgress.prototype, \"determinate\", {\n    set: function (value) {\n      this.foundation_.setDeterminate(value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCLinearProgress.prototype, \"progress\", {\n    set: function (value) {\n      this.foundation_.setProgress(value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCLinearProgress.prototype, \"buffer\", {\n    set: function (value) {\n      this.foundation_.setBuffer(value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCLinearProgress.prototype, \"reverse\", {\n    set: function (value) {\n      this.foundation_.setReverse(value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MDCLinearProgress.prototype.open = function () {\n    this.foundation_.open();\n  };\n\n  MDCLinearProgress.prototype.close = function () {\n    this.foundation_.close();\n  };\n\n  MDCLinearProgress.prototype.getDefaultFoundation = function () {\n    var _this = this; // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n\n\n    var adapter = {\n      addClass: function (className) {\n        return _this.root_.classList.add(className);\n      },\n      getBuffer: function () {\n        return _this.root_.querySelector(MDCLinearProgressFoundation.strings.BUFFER_SELECTOR);\n      },\n      getPrimaryBar: function () {\n        return _this.root_.querySelector(MDCLinearProgressFoundation.strings.PRIMARY_BAR_SELECTOR);\n      },\n      hasClass: function (className) {\n        return _this.root_.classList.contains(className);\n      },\n      removeClass: function (className) {\n        return _this.root_.classList.remove(className);\n      },\n      setStyle: function (el, styleProperty, value) {\n        return el.style.setProperty(styleProperty, value);\n      }\n    };\n    return new MDCLinearProgressFoundation(adapter);\n  };\n\n  return MDCLinearProgress;\n}(MDCComponent);\n\nexport { MDCLinearProgress };","map":{"version":3,"sources":["component.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAQ,YAAR,QAA2B,0BAA3B;AAEA,SAAQ,2BAAR,QAA0C,cAA1C;;AAEA,IAAA,iBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAuC,EAAA,OAAA,CAAA,SAAA,CAAA,iBAAA,EAAA,MAAA;;AAAvC,WAAA,iBAAA,GAAA;;AA0CC;;AAzCQ,EAAA,iBAAA,CAAA,QAAA,GAAP,UAAgB,IAAhB,EAA6B;AAC3B,WAAO,IAAI,iBAAJ,CAAsB,IAAtB,CAAP;AACD,GAFM;;AAIP,EAAA,MAAA,CAAA,cAAA,CAAI,iBAAA,CAAA,SAAJ,EAAI,aAAJ,EAAe;SAAf,UAAgB,KAAhB,EAA8B;AAC5B,WAAK,WAAL,CAAiB,cAAjB,CAAgC,KAAhC;AACD,KAFc;oBAAA;;AAAA,GAAf;AAIA,EAAA,MAAA,CAAA,cAAA,CAAI,iBAAA,CAAA,SAAJ,EAAI,UAAJ,EAAY;SAAZ,UAAa,KAAb,EAA0B;AACxB,WAAK,WAAL,CAAiB,WAAjB,CAA6B,KAA7B;AACD,KAFW;oBAAA;;AAAA,GAAZ;AAIA,EAAA,MAAA,CAAA,cAAA,CAAI,iBAAA,CAAA,SAAJ,EAAI,QAAJ,EAAU;SAAV,UAAW,KAAX,EAAwB;AACtB,WAAK,WAAL,CAAiB,SAAjB,CAA2B,KAA3B;AACD,KAFS;oBAAA;;AAAA,GAAV;AAIA,EAAA,MAAA,CAAA,cAAA,CAAI,iBAAA,CAAA,SAAJ,EAAI,SAAJ,EAAW;SAAX,UAAY,KAAZ,EAA0B;AACxB,WAAK,WAAL,CAAiB,UAAjB,CAA4B,KAA5B;AACD,KAFU;oBAAA;;AAAA,GAAX;;AAIA,EAAA,iBAAA,CAAA,SAAA,CAAA,IAAA,GAAA,YAAA;AACE,SAAK,WAAL,CAAiB,IAAjB;AACD,GAFD;;AAIA,EAAA,iBAAA,CAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AACE,SAAK,WAAL,CAAiB,KAAjB;AACD,GAFD;;AAIA,EAAA,iBAAA,CAAA,SAAA,CAAA,oBAAA,GAAA,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA,CAAA,CACE;AACA;;;AACA,QAAM,OAAO,GAA6B;AACxC,MAAA,QAAQ,EAAE,UAAC,SAAD,EAAkB;AAAK,eAAA,KAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,GAArB,CAAA,SAAA,CAAA;AAAmC,OAD5B;AAExC,MAAA,SAAS,EAAE,YAAA;AAAM,eAAA,KAAI,CAAC,KAAL,CAAW,aAAX,CAAyB,2BAA2B,CAAC,OAA5B,CAAzB,eAAA,CAAA;AAA6E,OAFtD;AAGxC,MAAA,aAAa,EAAE,YAAA;AAAM,eAAA,KAAI,CAAC,KAAL,CAAW,aAAX,CAAyB,2BAA2B,CAAC,OAA5B,CAAzB,oBAAA,CAAA;AAAkF,OAH/D;AAIxC,MAAA,QAAQ,EAAE,UAAC,SAAD,EAAkB;AAAK,eAAA,KAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,QAArB,CAAA,SAAA,CAAA;AAAwC,OAJjC;AAKxC,MAAA,WAAW,EAAE,UAAC,SAAD,EAAkB;AAAK,eAAA,KAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,MAArB,CAAA,SAAA,CAAA;AAAsC,OALlC;AAMxC,MAAA,QAAQ,EAAE,UAAC,EAAD,EAAkB,aAAlB,EAAyC,KAAzC,EAAsD;AAAK,eAAA,EAAE,CAAC,KAAH,CAAS,WAAT,CAAqB,aAArB,EAAA,KAAA,CAAA;AAA0C;AANvE,KAA1C;AAQA,WAAO,IAAI,2BAAJ,CAAgC,OAAhC,CAAP;AACD,GAZD;;AAaF,SAAA,iBAAA;AAAC,CA1CD,CAAuC,YAAvC,CAAA","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCLinearProgressFoundation } from './foundation';\nvar MDCLinearProgress = /** @class */ (function (_super) {\n    tslib_1.__extends(MDCLinearProgress, _super);\n    function MDCLinearProgress() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCLinearProgress.attachTo = function (root) {\n        return new MDCLinearProgress(root);\n    };\n    Object.defineProperty(MDCLinearProgress.prototype, \"determinate\", {\n        set: function (value) {\n            this.foundation_.setDeterminate(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCLinearProgress.prototype, \"progress\", {\n        set: function (value) {\n            this.foundation_.setProgress(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCLinearProgress.prototype, \"buffer\", {\n        set: function (value) {\n            this.foundation_.setBuffer(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCLinearProgress.prototype, \"reverse\", {\n        set: function (value) {\n            this.foundation_.setReverse(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCLinearProgress.prototype.open = function () {\n        this.foundation_.open();\n    };\n    MDCLinearProgress.prototype.close = function () {\n        this.foundation_.close();\n    };\n    MDCLinearProgress.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            addClass: function (className) { return _this.root_.classList.add(className); },\n            getBuffer: function () { return _this.root_.querySelector(MDCLinearProgressFoundation.strings.BUFFER_SELECTOR); },\n            getPrimaryBar: function () { return _this.root_.querySelector(MDCLinearProgressFoundation.strings.PRIMARY_BAR_SELECTOR); },\n            hasClass: function (className) { return _this.root_.classList.contains(className); },\n            removeClass: function (className) { return _this.root_.classList.remove(className); },\n            setStyle: function (el, styleProperty, value) { return el.style.setProperty(styleProperty, value); },\n        };\n        return new MDCLinearProgressFoundation(adapter);\n    };\n    return MDCLinearProgress;\n}(MDCComponent));\nexport { MDCLinearProgress };\n//# sourceMappingURL=component.js.map"]},"metadata":{},"sourceType":"module"}