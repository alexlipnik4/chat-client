{"ast":null,"code":"/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, numbers, strings } from './constants';\n\nvar MDCSelectFoundation =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MDCSelectFoundation, _super);\n  /* istanbul ignore next: optional argument is not a branch statement */\n\n  /**\n   * @param adapter\n   * @param foundationMap Map from subcomponent names to their subfoundations.\n   */\n\n\n  function MDCSelectFoundation(adapter, foundationMap) {\n    if (foundationMap === void 0) {\n      foundationMap = {};\n    }\n\n    var _this = _super.call(this, tslib_1.__assign({}, MDCSelectFoundation.defaultAdapter, adapter)) || this;\n\n    _this.leadingIcon_ = foundationMap.leadingIcon;\n    _this.helperText_ = foundationMap.helperText;\n    return _this;\n  }\n\n  Object.defineProperty(MDCSelectFoundation, \"cssClasses\", {\n    get: function () {\n      return cssClasses;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCSelectFoundation, \"numbers\", {\n    get: function () {\n      return numbers;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCSelectFoundation, \"strings\", {\n    get: function () {\n      return strings;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCSelectFoundation, \"defaultAdapter\", {\n    /**\n     * See {@link MDCSelectAdapter} for typing information on parameters and return types.\n     */\n    get: function () {\n      // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n      return {\n        addClass: function () {\n          return undefined;\n        },\n        removeClass: function () {\n          return undefined;\n        },\n        hasClass: function () {\n          return false;\n        },\n        activateBottomLine: function () {\n          return undefined;\n        },\n        deactivateBottomLine: function () {\n          return undefined;\n        },\n        setValue: function () {\n          return undefined;\n        },\n        getValue: function () {\n          return '';\n        },\n        floatLabel: function () {\n          return undefined;\n        },\n        getLabelWidth: function () {\n          return 0;\n        },\n        hasOutline: function () {\n          return false;\n        },\n        notchOutline: function () {\n          return undefined;\n        },\n        closeOutline: function () {\n          return undefined;\n        },\n        openMenu: function () {\n          return undefined;\n        },\n        closeMenu: function () {\n          return undefined;\n        },\n        isMenuOpen: function () {\n          return false;\n        },\n        setSelectedIndex: function () {\n          return undefined;\n        },\n        setDisabled: function () {\n          return undefined;\n        },\n        setRippleCenter: function () {\n          return undefined;\n        },\n        notifyChange: function () {\n          return undefined;\n        },\n        checkValidity: function () {\n          return false;\n        },\n        setValid: function () {\n          return undefined;\n        }\n      }; // tslint:enable:object-literal-sort-keys\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MDCSelectFoundation.prototype.setSelectedIndex = function (index) {\n    this.adapter_.setSelectedIndex(index);\n    this.adapter_.closeMenu();\n    var didChange = true;\n    this.handleChange(didChange);\n  };\n\n  MDCSelectFoundation.prototype.setValue = function (value) {\n    this.adapter_.setValue(value);\n    var didChange = true;\n    this.handleChange(didChange);\n  };\n\n  MDCSelectFoundation.prototype.getValue = function () {\n    return this.adapter_.getValue();\n  };\n\n  MDCSelectFoundation.prototype.setDisabled = function (isDisabled) {\n    if (isDisabled) {\n      this.adapter_.addClass(cssClasses.DISABLED);\n    } else {\n      this.adapter_.removeClass(cssClasses.DISABLED);\n    }\n\n    this.adapter_.setDisabled(isDisabled);\n    this.adapter_.closeMenu();\n\n    if (this.leadingIcon_) {\n      this.leadingIcon_.setDisabled(isDisabled);\n    }\n  };\n  /**\n   * @param content Sets the content of the helper text.\n   */\n\n\n  MDCSelectFoundation.prototype.setHelperTextContent = function (content) {\n    if (this.helperText_) {\n      this.helperText_.setContent(content);\n    }\n  };\n\n  MDCSelectFoundation.prototype.layout = function () {\n    var openNotch = this.getValue().length > 0;\n    this.notchOutline(openNotch);\n  };\n\n  MDCSelectFoundation.prototype.handleMenuOpened = function () {\n    this.adapter_.addClass(cssClasses.ACTIVATED);\n  };\n\n  MDCSelectFoundation.prototype.handleMenuClosed = function () {\n    this.adapter_.removeClass(cssClasses.ACTIVATED);\n  };\n  /**\n   * Handles value changes, via change event or programmatic updates.\n   */\n\n\n  MDCSelectFoundation.prototype.handleChange = function (didChange) {\n    if (didChange === void 0) {\n      didChange = true;\n    }\n\n    var value = this.getValue();\n    var optionHasValue = value.length > 0;\n    var isRequired = this.adapter_.hasClass(cssClasses.REQUIRED);\n    this.notchOutline(optionHasValue);\n\n    if (!this.adapter_.hasClass(cssClasses.FOCUSED)) {\n      this.adapter_.floatLabel(optionHasValue);\n    }\n\n    if (didChange) {\n      this.adapter_.notifyChange(value);\n\n      if (isRequired) {\n        this.setValid(this.isValid());\n\n        if (this.helperText_) {\n          this.helperText_.setValidity(this.isValid());\n        }\n      }\n    }\n  };\n  /**\n   * Handles focus events from select element.\n   */\n\n\n  MDCSelectFoundation.prototype.handleFocus = function () {\n    this.adapter_.addClass(cssClasses.FOCUSED);\n    this.adapter_.floatLabel(true);\n    this.notchOutline(true);\n    this.adapter_.activateBottomLine();\n\n    if (this.helperText_) {\n      this.helperText_.showToScreenReader();\n    }\n  };\n  /**\n   * Handles blur events from select element.\n   */\n\n\n  MDCSelectFoundation.prototype.handleBlur = function () {\n    if (this.adapter_.isMenuOpen()) {\n      return;\n    }\n\n    this.adapter_.removeClass(cssClasses.FOCUSED);\n    this.handleChange(false);\n    this.adapter_.deactivateBottomLine();\n    var isRequired = this.adapter_.hasClass(cssClasses.REQUIRED);\n\n    if (isRequired) {\n      this.setValid(this.isValid());\n\n      if (this.helperText_) {\n        this.helperText_.setValidity(this.isValid());\n      }\n    }\n  };\n\n  MDCSelectFoundation.prototype.handleClick = function (normalizedX) {\n    if (this.adapter_.isMenuOpen()) {\n      return;\n    }\n\n    this.adapter_.setRippleCenter(normalizedX);\n    this.adapter_.openMenu();\n  };\n\n  MDCSelectFoundation.prototype.handleKeydown = function (event) {\n    if (this.adapter_.isMenuOpen()) {\n      return;\n    }\n\n    var isEnter = event.key === 'Enter' || event.keyCode === 13;\n    var isSpace = event.key === 'Space' || event.keyCode === 32;\n    var arrowUp = event.key === 'ArrowUp' || event.keyCode === 38;\n    var arrowDown = event.key === 'ArrowDown' || event.keyCode === 40;\n\n    if (this.adapter_.hasClass(cssClasses.FOCUSED) && (isEnter || isSpace || arrowUp || arrowDown)) {\n      this.adapter_.openMenu();\n      event.preventDefault();\n    }\n  };\n  /**\n   * Opens/closes the notched outline.\n   */\n\n\n  MDCSelectFoundation.prototype.notchOutline = function (openNotch) {\n    if (!this.adapter_.hasOutline()) {\n      return;\n    }\n\n    var isFocused = this.adapter_.hasClass(cssClasses.FOCUSED);\n\n    if (openNotch) {\n      var labelScale = numbers.LABEL_SCALE;\n      var labelWidth = this.adapter_.getLabelWidth() * labelScale;\n      this.adapter_.notchOutline(labelWidth);\n    } else if (!isFocused) {\n      this.adapter_.closeOutline();\n    }\n  };\n  /**\n   * Sets the aria label of the leading icon.\n   */\n\n\n  MDCSelectFoundation.prototype.setLeadingIconAriaLabel = function (label) {\n    if (this.leadingIcon_) {\n      this.leadingIcon_.setAriaLabel(label);\n    }\n  };\n  /**\n   * Sets the text content of the leading icon.\n   */\n\n\n  MDCSelectFoundation.prototype.setLeadingIconContent = function (content) {\n    if (this.leadingIcon_) {\n      this.leadingIcon_.setContent(content);\n    }\n  };\n\n  MDCSelectFoundation.prototype.setValid = function (isValid) {\n    this.adapter_.setValid(isValid);\n  };\n\n  MDCSelectFoundation.prototype.isValid = function () {\n    return this.adapter_.checkValidity();\n  };\n\n  return MDCSelectFoundation;\n}(MDCFoundation);\n\nexport { MDCSelectFoundation }; // tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\n\nexport default MDCSelectFoundation;","map":{"version":3,"sources":["foundation.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, numbers, strings } from './constants';\nvar MDCSelectFoundation = /** @class */ (function (_super) {\n    tslib_1.__extends(MDCSelectFoundation, _super);\n    /* istanbul ignore next: optional argument is not a branch statement */\n    /**\n     * @param adapter\n     * @param foundationMap Map from subcomponent names to their subfoundations.\n     */\n    function MDCSelectFoundation(adapter, foundationMap) {\n        if (foundationMap === void 0) { foundationMap = {}; }\n        var _this = _super.call(this, tslib_1.__assign({}, MDCSelectFoundation.defaultAdapter, adapter)) || this;\n        _this.leadingIcon_ = foundationMap.leadingIcon;\n        _this.helperText_ = foundationMap.helperText;\n        return _this;\n    }\n    Object.defineProperty(MDCSelectFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSelectFoundation, \"numbers\", {\n        get: function () {\n            return numbers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSelectFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSelectFoundation, \"defaultAdapter\", {\n        /**\n         * See {@link MDCSelectAdapter} for typing information on parameters and return types.\n         */\n        get: function () {\n            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n            return {\n                addClass: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                hasClass: function () { return false; },\n                activateBottomLine: function () { return undefined; },\n                deactivateBottomLine: function () { return undefined; },\n                setValue: function () { return undefined; },\n                getValue: function () { return ''; },\n                floatLabel: function () { return undefined; },\n                getLabelWidth: function () { return 0; },\n                hasOutline: function () { return false; },\n                notchOutline: function () { return undefined; },\n                closeOutline: function () { return undefined; },\n                openMenu: function () { return undefined; },\n                closeMenu: function () { return undefined; },\n                isMenuOpen: function () { return false; },\n                setSelectedIndex: function () { return undefined; },\n                setDisabled: function () { return undefined; },\n                setRippleCenter: function () { return undefined; },\n                notifyChange: function () { return undefined; },\n                checkValidity: function () { return false; },\n                setValid: function () { return undefined; },\n            };\n            // tslint:enable:object-literal-sort-keys\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCSelectFoundation.prototype.setSelectedIndex = function (index) {\n        this.adapter_.setSelectedIndex(index);\n        this.adapter_.closeMenu();\n        var didChange = true;\n        this.handleChange(didChange);\n    };\n    MDCSelectFoundation.prototype.setValue = function (value) {\n        this.adapter_.setValue(value);\n        var didChange = true;\n        this.handleChange(didChange);\n    };\n    MDCSelectFoundation.prototype.getValue = function () {\n        return this.adapter_.getValue();\n    };\n    MDCSelectFoundation.prototype.setDisabled = function (isDisabled) {\n        if (isDisabled) {\n            this.adapter_.addClass(cssClasses.DISABLED);\n        }\n        else {\n            this.adapter_.removeClass(cssClasses.DISABLED);\n        }\n        this.adapter_.setDisabled(isDisabled);\n        this.adapter_.closeMenu();\n        if (this.leadingIcon_) {\n            this.leadingIcon_.setDisabled(isDisabled);\n        }\n    };\n    /**\n     * @param content Sets the content of the helper text.\n     */\n    MDCSelectFoundation.prototype.setHelperTextContent = function (content) {\n        if (this.helperText_) {\n            this.helperText_.setContent(content);\n        }\n    };\n    MDCSelectFoundation.prototype.layout = function () {\n        var openNotch = this.getValue().length > 0;\n        this.notchOutline(openNotch);\n    };\n    MDCSelectFoundation.prototype.handleMenuOpened = function () {\n        this.adapter_.addClass(cssClasses.ACTIVATED);\n    };\n    MDCSelectFoundation.prototype.handleMenuClosed = function () {\n        this.adapter_.removeClass(cssClasses.ACTIVATED);\n    };\n    /**\n     * Handles value changes, via change event or programmatic updates.\n     */\n    MDCSelectFoundation.prototype.handleChange = function (didChange) {\n        if (didChange === void 0) { didChange = true; }\n        var value = this.getValue();\n        var optionHasValue = value.length > 0;\n        var isRequired = this.adapter_.hasClass(cssClasses.REQUIRED);\n        this.notchOutline(optionHasValue);\n        if (!this.adapter_.hasClass(cssClasses.FOCUSED)) {\n            this.adapter_.floatLabel(optionHasValue);\n        }\n        if (didChange) {\n            this.adapter_.notifyChange(value);\n            if (isRequired) {\n                this.setValid(this.isValid());\n                if (this.helperText_) {\n                    this.helperText_.setValidity(this.isValid());\n                }\n            }\n        }\n    };\n    /**\n     * Handles focus events from select element.\n     */\n    MDCSelectFoundation.prototype.handleFocus = function () {\n        this.adapter_.addClass(cssClasses.FOCUSED);\n        this.adapter_.floatLabel(true);\n        this.notchOutline(true);\n        this.adapter_.activateBottomLine();\n        if (this.helperText_) {\n            this.helperText_.showToScreenReader();\n        }\n    };\n    /**\n     * Handles blur events from select element.\n     */\n    MDCSelectFoundation.prototype.handleBlur = function () {\n        if (this.adapter_.isMenuOpen()) {\n            return;\n        }\n        this.adapter_.removeClass(cssClasses.FOCUSED);\n        this.handleChange(false);\n        this.adapter_.deactivateBottomLine();\n        var isRequired = this.adapter_.hasClass(cssClasses.REQUIRED);\n        if (isRequired) {\n            this.setValid(this.isValid());\n            if (this.helperText_) {\n                this.helperText_.setValidity(this.isValid());\n            }\n        }\n    };\n    MDCSelectFoundation.prototype.handleClick = function (normalizedX) {\n        if (this.adapter_.isMenuOpen()) {\n            return;\n        }\n        this.adapter_.setRippleCenter(normalizedX);\n        this.adapter_.openMenu();\n    };\n    MDCSelectFoundation.prototype.handleKeydown = function (event) {\n        if (this.adapter_.isMenuOpen()) {\n            return;\n        }\n        var isEnter = event.key === 'Enter' || event.keyCode === 13;\n        var isSpace = event.key === 'Space' || event.keyCode === 32;\n        var arrowUp = event.key === 'ArrowUp' || event.keyCode === 38;\n        var arrowDown = event.key === 'ArrowDown' || event.keyCode === 40;\n        if (this.adapter_.hasClass(cssClasses.FOCUSED) && (isEnter || isSpace || arrowUp || arrowDown)) {\n            this.adapter_.openMenu();\n            event.preventDefault();\n        }\n    };\n    /**\n     * Opens/closes the notched outline.\n     */\n    MDCSelectFoundation.prototype.notchOutline = function (openNotch) {\n        if (!this.adapter_.hasOutline()) {\n            return;\n        }\n        var isFocused = this.adapter_.hasClass(cssClasses.FOCUSED);\n        if (openNotch) {\n            var labelScale = numbers.LABEL_SCALE;\n            var labelWidth = this.adapter_.getLabelWidth() * labelScale;\n            this.adapter_.notchOutline(labelWidth);\n        }\n        else if (!isFocused) {\n            this.adapter_.closeOutline();\n        }\n    };\n    /**\n     * Sets the aria label of the leading icon.\n     */\n    MDCSelectFoundation.prototype.setLeadingIconAriaLabel = function (label) {\n        if (this.leadingIcon_) {\n            this.leadingIcon_.setAriaLabel(label);\n        }\n    };\n    /**\n     * Sets the text content of the leading icon.\n     */\n    MDCSelectFoundation.prototype.setLeadingIconContent = function (content) {\n        if (this.leadingIcon_) {\n            this.leadingIcon_.setContent(content);\n        }\n    };\n    MDCSelectFoundation.prototype.setValid = function (isValid) {\n        this.adapter_.setValid(isValid);\n    };\n    MDCSelectFoundation.prototype.isValid = function () {\n        return this.adapter_.checkValidity();\n    };\n    return MDCSelectFoundation;\n}(MDCFoundation));\nexport { MDCSelectFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCSelectFoundation;\n//# sourceMappingURL=foundation.js.map"]},"metadata":{},"sourceType":"module"}