{"ast":null,"code":"var _jsxFileName = \"/Users/alexlipnik/Documents/ec2/basic-store/src/app/common/context/AuthContext.js\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport AuthService from '../services/AuthService';\nexport const AuthContext = createContext();\nexport default (({\n  children\n}) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    AuthService.isAuthenticated().then(data => {\n      setUser(data.user);\n      setIsAuthenticated(data.isAuthenticated);\n      setIsLoaded(true);\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    style: {\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, !isLoaded ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Loading\") : React.createElement(AuthContext.Provider, {\n    value: {\n      user,\n      setUser,\n      setIsAuthenticated,\n      isAuthenticated\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, children));\n});","map":{"version":3,"sources":["/Users/alexlipnik/Documents/ec2/basic-store/src/app/common/context/AuthContext.js"],"names":["React","createContext","useState","useEffect","AuthService","AuthContext","children","user","setUser","isAuthenticated","setIsAuthenticated","isLoaded","setIsLoaded","then","data","height"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,QAA9B,EAAwCC,SAAxC,QAAwD,OAAxD;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,EAAjC;AAEP,gBAAe,CAAC;AAAEK,EAAAA;AAAF,CAAD,KAAkB;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,WAAW,CAACK,eAAZ,GAA8BI,IAA9B,CAAmCC,IAAI,IAAI;AACvCN,MAAAA,OAAO,CAACM,IAAI,CAACP,IAAN,CAAP;AACAG,MAAAA,kBAAkB,CAACI,IAAI,CAACL,eAAN,CAAlB;AACAG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAJD;AAKH,GANQ,EAMP,EANO,CAAT;AAQA,SACI;AAAK,IAAA,KAAK,EAAE;AAACG,MAAAA,MAAM,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,CAACJ,QAAD,GAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAZ,GACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACJ,MAAAA,IAAD;AAAOC,MAAAA,OAAP;AAAgBE,MAAAA,kBAAhB;AAAoCD,MAAAA;AAApC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,QADL,CAFR,CADJ;AAUH,CAvBD","sourcesContent":["import React, {createContext, useState, useEffect} from 'react';\nimport AuthService from '../services/AuthService';\n\nexport const AuthContext = createContext();\n\nexport default ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [isLoaded, setIsLoaded] = useState(false);\n    \n    useEffect(() => {\n        AuthService.isAuthenticated().then(data => {\n            setUser(data.user);\n            setIsAuthenticated(data.isAuthenticated);\n            setIsLoaded(true)\n        })\n    },[])\n\n    return (\n        <div style={{height: '100%'}}>\n            { !isLoaded ? <h1>Loading</h1> : \n                <AuthContext.Provider value={{user, setUser, setIsAuthenticated, isAuthenticated}}>\n                    {children}\n                </AuthContext.Provider>\n            }\n        </div>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}