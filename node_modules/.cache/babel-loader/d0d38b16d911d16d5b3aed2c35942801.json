{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { applyPassive } from '@material/dom/events';\nimport { matches } from '@material/dom/ponyfill';\nimport { MDCTabScrollerFoundation } from './foundation';\nimport * as util from './util';\n\nvar MDCTabScroller =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MDCTabScroller, _super);\n\n  function MDCTabScroller() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MDCTabScroller.attachTo = function (root) {\n    return new MDCTabScroller(root);\n  };\n\n  MDCTabScroller.prototype.initialize = function () {\n    this.area_ = this.root_.querySelector(MDCTabScrollerFoundation.strings.AREA_SELECTOR);\n    this.content_ = this.root_.querySelector(MDCTabScrollerFoundation.strings.CONTENT_SELECTOR);\n  };\n\n  MDCTabScroller.prototype.initialSyncWithDOM = function () {\n    var _this = this;\n\n    this.handleInteraction_ = function () {\n      return _this.foundation_.handleInteraction();\n    };\n\n    this.handleTransitionEnd_ = function (evt) {\n      return _this.foundation_.handleTransitionEnd(evt);\n    };\n\n    this.area_.addEventListener('wheel', this.handleInteraction_, applyPassive());\n    this.area_.addEventListener('touchstart', this.handleInteraction_, applyPassive());\n    this.area_.addEventListener('pointerdown', this.handleInteraction_, applyPassive());\n    this.area_.addEventListener('mousedown', this.handleInteraction_, applyPassive());\n    this.area_.addEventListener('keydown', this.handleInteraction_, applyPassive());\n    this.content_.addEventListener('transitionend', this.handleTransitionEnd_);\n  };\n\n  MDCTabScroller.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n\n    this.area_.removeEventListener('wheel', this.handleInteraction_, applyPassive());\n    this.area_.removeEventListener('touchstart', this.handleInteraction_, applyPassive());\n    this.area_.removeEventListener('pointerdown', this.handleInteraction_, applyPassive());\n    this.area_.removeEventListener('mousedown', this.handleInteraction_, applyPassive());\n    this.area_.removeEventListener('keydown', this.handleInteraction_, applyPassive());\n    this.content_.removeEventListener('transitionend', this.handleTransitionEnd_);\n  };\n\n  MDCTabScroller.prototype.getDefaultFoundation = function () {\n    var _this = this; // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    var adapter = {\n      eventTargetMatchesSelector: function (evtTarget, selector) {\n        return matches(evtTarget, selector);\n      },\n      addClass: function (className) {\n        return _this.root_.classList.add(className);\n      },\n      removeClass: function (className) {\n        return _this.root_.classList.remove(className);\n      },\n      addScrollAreaClass: function (className) {\n        return _this.area_.classList.add(className);\n      },\n      setScrollAreaStyleProperty: function (prop, value) {\n        return _this.area_.style.setProperty(prop, value);\n      },\n      setScrollContentStyleProperty: function (prop, value) {\n        return _this.content_.style.setProperty(prop, value);\n      },\n      getScrollContentStyleValue: function (propName) {\n        return window.getComputedStyle(_this.content_).getPropertyValue(propName);\n      },\n      setScrollAreaScrollLeft: function (scrollX) {\n        return _this.area_.scrollLeft = scrollX;\n      },\n      getScrollAreaScrollLeft: function () {\n        return _this.area_.scrollLeft;\n      },\n      getScrollContentOffsetWidth: function () {\n        return _this.content_.offsetWidth;\n      },\n      getScrollAreaOffsetWidth: function () {\n        return _this.area_.offsetWidth;\n      },\n      computeScrollAreaClientRect: function () {\n        return _this.area_.getBoundingClientRect();\n      },\n      computeScrollContentClientRect: function () {\n        return _this.content_.getBoundingClientRect();\n      },\n      computeHorizontalScrollbarHeight: function () {\n        return util.computeHorizontalScrollbarHeight(document);\n      }\n    }; // tslint:enable:object-literal-sort-keys\n\n    return new MDCTabScrollerFoundation(adapter);\n  };\n  /**\n   * Returns the current visual scroll position\n   */\n\n\n  MDCTabScroller.prototype.getScrollPosition = function () {\n    return this.foundation_.getScrollPosition();\n  };\n  /**\n   * Returns the width of the scroll content\n   */\n\n\n  MDCTabScroller.prototype.getScrollContentWidth = function () {\n    return this.content_.offsetWidth;\n  };\n  /**\n   * Increments the scroll value by the given amount\n   * @param scrollXIncrement The pixel value by which to increment the scroll value\n   */\n\n\n  MDCTabScroller.prototype.incrementScroll = function (scrollXIncrement) {\n    this.foundation_.incrementScroll(scrollXIncrement);\n  };\n  /**\n   * Scrolls to the given pixel position\n   * @param scrollX The pixel value to scroll to\n   */\n\n\n  MDCTabScroller.prototype.scrollTo = function (scrollX) {\n    this.foundation_.scrollTo(scrollX);\n  };\n\n  return MDCTabScroller;\n}(MDCComponent);\n\nexport { MDCTabScroller };","map":{"version":3,"sources":["component.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { applyPassive } from '@material/dom/events';\nimport { matches } from '@material/dom/ponyfill';\nimport { MDCTabScrollerFoundation } from './foundation';\nimport * as util from './util';\nvar MDCTabScroller = /** @class */ (function (_super) {\n    tslib_1.__extends(MDCTabScroller, _super);\n    function MDCTabScroller() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCTabScroller.attachTo = function (root) {\n        return new MDCTabScroller(root);\n    };\n    MDCTabScroller.prototype.initialize = function () {\n        this.area_ = this.root_.querySelector(MDCTabScrollerFoundation.strings.AREA_SELECTOR);\n        this.content_ = this.root_.querySelector(MDCTabScrollerFoundation.strings.CONTENT_SELECTOR);\n    };\n    MDCTabScroller.prototype.initialSyncWithDOM = function () {\n        var _this = this;\n        this.handleInteraction_ = function () { return _this.foundation_.handleInteraction(); };\n        this.handleTransitionEnd_ = function (evt) { return _this.foundation_.handleTransitionEnd(evt); };\n        this.area_.addEventListener('wheel', this.handleInteraction_, applyPassive());\n        this.area_.addEventListener('touchstart', this.handleInteraction_, applyPassive());\n        this.area_.addEventListener('pointerdown', this.handleInteraction_, applyPassive());\n        this.area_.addEventListener('mousedown', this.handleInteraction_, applyPassive());\n        this.area_.addEventListener('keydown', this.handleInteraction_, applyPassive());\n        this.content_.addEventListener('transitionend', this.handleTransitionEnd_);\n    };\n    MDCTabScroller.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.area_.removeEventListener('wheel', this.handleInteraction_, applyPassive());\n        this.area_.removeEventListener('touchstart', this.handleInteraction_, applyPassive());\n        this.area_.removeEventListener('pointerdown', this.handleInteraction_, applyPassive());\n        this.area_.removeEventListener('mousedown', this.handleInteraction_, applyPassive());\n        this.area_.removeEventListener('keydown', this.handleInteraction_, applyPassive());\n        this.content_.removeEventListener('transitionend', this.handleTransitionEnd_);\n    };\n    MDCTabScroller.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        var adapter = {\n            eventTargetMatchesSelector: function (evtTarget, selector) { return matches(evtTarget, selector); },\n            addClass: function (className) { return _this.root_.classList.add(className); },\n            removeClass: function (className) { return _this.root_.classList.remove(className); },\n            addScrollAreaClass: function (className) { return _this.area_.classList.add(className); },\n            setScrollAreaStyleProperty: function (prop, value) { return _this.area_.style.setProperty(prop, value); },\n            setScrollContentStyleProperty: function (prop, value) { return _this.content_.style.setProperty(prop, value); },\n            getScrollContentStyleValue: function (propName) { return window.getComputedStyle(_this.content_).getPropertyValue(propName); },\n            setScrollAreaScrollLeft: function (scrollX) { return _this.area_.scrollLeft = scrollX; },\n            getScrollAreaScrollLeft: function () { return _this.area_.scrollLeft; },\n            getScrollContentOffsetWidth: function () { return _this.content_.offsetWidth; },\n            getScrollAreaOffsetWidth: function () { return _this.area_.offsetWidth; },\n            computeScrollAreaClientRect: function () { return _this.area_.getBoundingClientRect(); },\n            computeScrollContentClientRect: function () { return _this.content_.getBoundingClientRect(); },\n            computeHorizontalScrollbarHeight: function () { return util.computeHorizontalScrollbarHeight(document); },\n        };\n        // tslint:enable:object-literal-sort-keys\n        return new MDCTabScrollerFoundation(adapter);\n    };\n    /**\n     * Returns the current visual scroll position\n     */\n    MDCTabScroller.prototype.getScrollPosition = function () {\n        return this.foundation_.getScrollPosition();\n    };\n    /**\n     * Returns the width of the scroll content\n     */\n    MDCTabScroller.prototype.getScrollContentWidth = function () {\n        return this.content_.offsetWidth;\n    };\n    /**\n     * Increments the scroll value by the given amount\n     * @param scrollXIncrement The pixel value by which to increment the scroll value\n     */\n    MDCTabScroller.prototype.incrementScroll = function (scrollXIncrement) {\n        this.foundation_.incrementScroll(scrollXIncrement);\n    };\n    /**\n     * Scrolls to the given pixel position\n     * @param scrollX The pixel value to scroll to\n     */\n    MDCTabScroller.prototype.scrollTo = function (scrollX) {\n        this.foundation_.scrollTo(scrollX);\n    };\n    return MDCTabScroller;\n}(MDCComponent));\nexport { MDCTabScroller };\n//# sourceMappingURL=component.js.map"]},"metadata":{},"sourceType":"module"}