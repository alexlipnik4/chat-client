{"ast":null,"code":"var _jsxFileName = \"/Users/alexlipnik/Documents/ec2/basic-store/src/app/common/hocs/PrivateRoute.tsx\";\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\n\nconst PrivateRoute = ({\n  component: Component,\n  roles,\n  ...rest\n}) => {\n  const {\n    isAuthenticated,\n    user\n  } = useContext(AuthContext);\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      if (!isAuthenticated) {\n        return React.createElement(Redirect, {\n          to: {\n            pathname: '/login',\n            state: {\n              from: props.location\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        });\n      }\n\n      if (!roles.includes(user.role)) {\n        return React.createElement(Redirect, {\n          to: {\n            pathname: '/',\n            state: {\n              from: props.location\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/alexlipnik/Documents/ec2/basic-store/src/app/common/hocs/PrivateRoute.tsx"],"names":["React","useContext","Route","Redirect","AuthContext","PrivateRoute","component","Component","roles","rest","isAuthenticated","user","props","pathname","state","from","location","includes","role"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,KAAR,EAAeC,QAAf,QAAsC,kBAAtC;AACA,SAAQC,WAAR,QAA0B,wBAA1B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuBC,EAAAA,KAAvB;AAA8B,KAAGC;AAAjC,CAAD,KAAiD;AAClE,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAA4BV,UAAU,CAACG,WAAD,CAA5C;AACA,SACI,oBAAC,KAAD,oBACQK,IADR;AAEI,IAAA,MAAM,EAAEG,KAAK,IAAI;AACb,UAAG,CAACF,eAAJ,EAAoB;AAChB,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAACG,YAAAA,QAAQ,EAAE,QAAX;AAAqBC,YAAAA,KAAK,EAAE;AAACC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AAAb;AAA5B,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AACD,UAAG,CAACR,KAAK,CAACS,QAAN,CAAeN,IAAI,CAACO,IAApB,CAAJ,EAA+B;AAC3B,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAACL,YAAAA,QAAQ,EAAE,GAAX;AAAgBC,YAAAA,KAAK,EAAE;AAACC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AAAb;AAAvB,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AACD,aAAO,oBAAC,SAAD,oBAAeJ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH,KAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAcH,CAhBD;;AAkBA,eAAeP,YAAf","sourcesContent":["import React, {useContext} from 'react';\nimport {Route, Redirect, Router} from 'react-router-dom';\nimport {AuthContext} from '../context/AuthContext';\n\nconst PrivateRoute = ({component: Component, roles, ...rest}: any) => {\n    const { isAuthenticated, user } = useContext(AuthContext);\n    return (\n        <Route \n            {...rest}\n            render={props => {\n                if(!isAuthenticated){\n                    return <Redirect to={{pathname: '/login', state: {from: props.location}}} />\n                }\n                if(!roles.includes(user.role)) {\n                    return <Redirect to={{pathname: '/', state: {from: props.location}}} />\n                }\n                return <Component {...props} />\n            }}\n        />\n    )\n}\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}