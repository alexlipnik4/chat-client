{"ast":null,"code":"var _jsxFileName = \"/Users/alexlipnik/Documents/ec2/basic-store/src/app/components/Navbar/TabRenderer/TabRenderer.tsx\";\nimport React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AuthContext } from '../../../common/context/AuthContext';\nimport authenticationConfig from '../../../common/config/navbar/authenticated.json';\nimport unAuthenticationConfig from '../../../common/config/navbar/unAuthenticated.json';\nimport { Tab } from 'rmwc';\n\nconst TabRenderer = () => {\n  const {\n    isAuthenticated,\n    user\n  } = useContext(AuthContext);\n  const config = isAuthenticated ? authenticationConfig : unAuthenticationConfig;\n  return React.createElement(React.Fragment, null, config.map((tab, index) => {\n    if (tab.role !== \"\") {\n      return user.role === tab.role && React.createElement(Link, {\n        key: index,\n        to: tab.path,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        className: \"navbar__nav-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, tab.label));\n    } else {\n      return React.createElement(Link, {\n        key: index,\n        to: tab.path,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        className: \"navbar__nav-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, tab.label));\n    }\n  }));\n};\n\nexport default TabRenderer;","map":{"version":3,"sources":["/Users/alexlipnik/Documents/ec2/basic-store/src/app/components/Navbar/TabRenderer/TabRenderer.tsx"],"names":["React","useContext","Link","AuthContext","authenticationConfig","unAuthenticationConfig","Tab","TabRenderer","isAuthenticated","user","config","map","tab","index","role","path","label"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,WAAT,QAA4B,qCAA5B;AAEA,OAAOC,oBAAP,MAAiC,kDAAjC;AACA,OAAOC,sBAAP,MAAmC,oDAAnC;AAEA,SAAQC,GAAR,QAAkB,MAAlB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACtB,QAAM;AAACC,IAAAA,eAAD;AAAkBC,IAAAA;AAAlB,MAA0BR,UAAU,CAACE,WAAD,CAA1C;AAEA,QAAMO,MAAM,GAAGF,eAAe,GAAGJ,oBAAH,GAA0BC,sBAAxD;AAEA,SACI,0CACKK,MAAM,CAACC,GAAP,CAAW,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACxB,QAAGD,GAAG,CAACE,IAAJ,KAAa,EAAhB,EAAoB;AAChB,aACIL,IAAI,CAACK,IAAL,KAAcF,GAAG,CAACE,IAAlB,IACI,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAED,KAAX;AAAkB,QAAA,EAAE,EAAED,GAAG,CAACG,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKH,GAAG,CAACI,KADT,CADJ,CAFR;AAQH,KATD,MASO;AACH,aACI,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEH,KAAX;AAAkB,QAAA,EAAE,EAAED,GAAG,CAACG,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKH,GAAG,CAACI,KADT,CADJ,CADJ;AAOH;AACJ,GAnBA,CADL,CADJ;AAwBH,CA7BD;;AA+BA,eAAeT,WAAf","sourcesContent":["import React, {useContext} from 'react';\nimport {Link} from 'react-router-dom';\nimport { AuthContext } from '../../../common/context/AuthContext';\n\nimport authenticationConfig from '../../../common/config/navbar/authenticated.json';\nimport unAuthenticationConfig from '../../../common/config/navbar/unAuthenticated.json';\n\nimport {Tab} from 'rmwc';\n\nconst TabRenderer = () => {\n    const {isAuthenticated, user} = useContext(AuthContext);\n\n    const config = isAuthenticated ? authenticationConfig : unAuthenticationConfig;\n\n    return (\n        <>\n            {config.map((tab, index) => {\n                if(tab.role !== \"\") {\n                    return (\n                        user.role === tab.role && \n                            <Link key={index} to={tab.path}>\n                                <Tab className=\"navbar__nav-link\">\n                                    {tab.label}\n                                </Tab>\n                            </Link>\n                    )\n                } else {\n                    return (\n                        <Link key={index} to={tab.path}>\n                            <Tab className=\"navbar__nav-link\">\n                                {tab.label}\n                            </Tab>\n                        </Link>\n                    )\n                }\n            })}\n        </>\n    )\n}\n\nexport default TabRenderer;"]},"metadata":{},"sourceType":"module"}